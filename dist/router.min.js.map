{
  "version": 3,
  "sources": ["../src/route.ts", "../src/utils.ts", "../src/index.ts", "../builds/cdn.js"],
  "sourcesContent": ["import type { Handler } from './types'\r\n\r\nclass Route {\r\n\tparams = {}\r\n\tpath: string\r\n\thandlers: Handler[]\r\n\tconstructor(path: string, options = {}) {\r\n\t\tthis.path = path\r\n\t\tObject.keys(options).forEach((opt) => {\r\n\t\t\tthis[opt] = options[opt]\r\n\t\t})\r\n\t}\r\n\tprototype: any\r\n}\r\n\r\nexport default Route\r\n", "import { Context } from './types'\r\n\r\nvar isLocation = window.location\r\n\r\n/**\r\n * taken from preact-router\r\n * https://github.com/preactjs/preact-router\r\n * @param url url to segmentize\r\n * @returns\r\n */\r\nfunction segmentize(url: string): string[] {\r\n\treturn url.replace(/(^\\/+|\\/+$)/g, '').split('/')\r\n}\r\n\r\n/**\r\n * check if a path match with this route\r\n * taken from preact-router\r\n * https://github.com/preactjs/preact-router\r\n * @param path {string}\r\n * @param routePath {string}\r\n * @returns {false|object}\r\n */\r\nexport function match(url: string, routePath: string): false | object {\r\n\tlet reg = /(?:\\?([^#]*))?(#.*)?$/,\r\n\t\tc = url.match(reg),\r\n\t\tmatches: any = {},\r\n\t\tret\r\n\tif (c && c[1]) {\r\n\t\tlet p = c[1].split('&')\r\n\t\tfor (let i = 0; i < p.length; i++) {\r\n\t\t\tlet r = p[i].split('=')\r\n\t\t\tmatches[decodeURIComponent(r[0])] = decodeURIComponent(\r\n\t\t\t\tr.slice(1).join('=')\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\tlet urlSeg = segmentize(url.replace(reg, '')),\r\n\t\troute: string[] = segmentize(routePath || ''),\r\n\t\tmax = Math.max(urlSeg.length, route.length)\r\n\tfor (let i = 0; i < max; i++) {\r\n\t\tif (route[i] && route[i].charAt(0) === ':') {\r\n\t\t\tlet param: string = route[i].replace(/(^:|[+*?]+$)/g, ''),\r\n\t\t\t\tflags: string = (route[i].match(/[+*?]+$/) || {}).toString()[0],\r\n\t\t\t\tplus = ~flags.indexOf('+'),\r\n\t\t\t\tstar = ~flags.indexOf('*'),\r\n\t\t\t\tval = urlSeg[i] || ''\r\n\t\t\tif (!val && !star && (flags.indexOf('?') < 0 || plus)) {\r\n\t\t\t\tret = false\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tmatches[param] = decodeURIComponent(val)\r\n\t\t\tif (plus || star) {\r\n\t\t\t\tmatches[param] = urlSeg\r\n\t\t\t\t\t.slice(i)\r\n\t\t\t\t\t.map(decodeURIComponent)\r\n\t\t\t\t\t.join('/')\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t} else if (route[i] !== urlSeg[i]) {\r\n\t\t\tret = false\r\n\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\tif (ret === false) return false\r\n\treturn matches\r\n}\r\n\r\n/**\r\n * Convert to a URL object\r\n * https://github.com/visionmedia/page.js/blob/4f9991658f9b9e3de9b6059bade93693af24d6bd/page.js#L888\r\n */\r\nfunction toURL(href: string): URL | HTMLAnchorElement {\r\n\tif (typeof URL === 'function' && isLocation) {\r\n\t\treturn new URL(href, window.location.toString())\r\n\t} else {\r\n\t\tvar anc = window.document.createElement('a')\r\n\t\tanc.href = href\r\n\t\treturn anc\r\n\t}\r\n}\r\n\r\n/**\r\n * Check if `href` is the same origin.\r\n * https://github.com/visionmedia/page.js/blob/4f9991658f9b9e3de9b6059bade93693af24d6bd/page.js#L888\r\n */\r\nexport function sameOrigin(href: string) {\r\n\tif (!href || !isLocation) return false\r\n\r\n\tvar url = toURL(href)\r\n\tvar loc = window.location\r\n\r\n\t/*\r\n    When the port is the default http port 80 for http, or 443 for\r\n    https, internet explorer 11 returns an empty string for loc.port,\r\n    so we need to compare loc.port with an empty string if url.port\r\n    is the default port 80 or 443.\r\n    Also the comparison with `port` is changed from `===` to `==` because\r\n    `port` can be a string sometimes. This only applies to ie11.\r\n    */\r\n\treturn (\r\n\t\tloc.protocol === url.protocol &&\r\n\t\tloc.hostname === url.hostname &&\r\n\t\t(loc.port === url.port ||\r\n\t\t\t(loc.port === '' && (url.port == '80' || url.port == '443')))\r\n\t) // jshint ignore:line\r\n}\r\n\r\nexport function samePath(url: any) {\r\n\tif (!isLocation) return false\r\n\tvar loc = window.location\r\n\treturn url.pathname === loc.pathname && url.search === loc.search\r\n}\r\n\r\n/**\r\n * Check if the anchor element point to a navigation route.\r\n * @param {any} el The anchor element or Event target\r\n * @param {boolean} hash Set to true when using hash routing\r\n * @returns {object} {valid: boolean, link: string}\r\n */\r\nexport function validLink(\r\n\tel: any,\r\n\thash: boolean\r\n): { valid: boolean; link: string } {\r\n\t// the object we'll return\r\n\tlet ret = { valid: false, link: '' }\r\n\r\n\t// The checks in this block are taken from\r\n\t// https://github.com/visionmedia/page.js/blob/master/index.js#L370\r\n\r\n\t// continue ensure link\r\n\r\n\t// el.nodeName for svg links are 'a' instead of 'A'\r\n\t// traverse up till we find an anchor tag, since clicks\r\n\t// on image links for example set the target as img instead of a.\r\n\twhile (el && 'A' !== el.nodeName.toUpperCase()) el = el.parentNode\r\n\tif (!el || 'A' !== el.nodeName.toUpperCase()) return ret\r\n\r\n\t// check if link is inside an svg\r\n\t// in this case, both href and target are always inside an object\r\n\tvar svg =\r\n\t\ttypeof el.href === 'object' &&\r\n\t\tel.href.constructor.name === 'SVGAnimatedString'\r\n\r\n\t// Ignore if tag has\r\n\t// 1. \"download\" attribute\r\n\t// 2. rel=\"external\" attribute\r\n\tif (el.hasAttribute('download') || el.getAttribute('rel') === 'external') {\r\n\t\treturn ret\r\n\t}\r\n\r\n\t// ensure non-hash for the same path\r\n\tret.link = el.getAttribute('href') ?? ''\r\n\tif (!hash && samePath(el) && (el.hash || '#' === ret.link)) {\r\n\t\treturn ret\r\n\t}\r\n\r\n\t// Check for mailto: in the href\r\n\tif (ret.link && ret.link.indexOf('mailto:') > -1) return ret\r\n\r\n\t// check target\r\n\t// svg target is an object and its desired value is in .baseVal property\r\n\tif (svg ? el.target.baseVal : el.target) return ret\r\n\r\n\t// x-origin\r\n\t// note: svg links that are not relative don't call click events (and skip page.js)\r\n\t// consequently, all svg links tested inside page.js are relative and in the same origin\r\n\tif (!svg && !sameOrigin(el.href)) return ret\r\n\r\n\tret.valid = true\r\n\treturn ret\r\n}\r\n\r\n/**\r\n * execute the handlers of routes that are given passing them the context.\r\n */\r\nexport function handle(handlers, context) {\r\n\tfor (let i = 0; i < handlers.length; i++) {\r\n\t\tif (typeof handlers[i] == 'function') {\r\n\t\t\tlet result = handlers[i](context)\r\n\t\t\t// if the handler redirected, return\r\n\t\t\tif (result == 'stop') return false\r\n\t\t}\r\n\t}\r\n\treturn true\r\n}\r\n\r\n/**\r\n * Call a function on all middlewares loaded, if any.\r\n * @param {string} func middleware function to call.\r\n * @param {any} args arguments to pass to the function.\r\n * @returns {boolean} false if the middleware function return false, i.e. it want to stop execution of the function and return.\r\n */\r\nexport function middleware(func: string, ...args: any): string | undefined {\r\n\tif (!window.PineconeRouterMiddlewares) return\r\n\tfor (const i in window.PineconeRouterMiddlewares) {\r\n\t\tlet plugin: any = window.PineconeRouterMiddlewares[i]\r\n\t\tif (plugin[func] == null) return\r\n\t\tlet ret = plugin[func](...args)\r\n\t\t// the return of the function will only be 'stop'\r\n\t\t// if the middleware request stopping the navigate function.\r\n\t\tif (ret == 'stop') return 'stop'\r\n\t}\r\n}\r\n\r\n/**\r\n * This will replace the content fetched from `path` into `selector`.\r\n * The content is assumed to not be an entire html page but a chunk of it.\r\n */\r\nexport function renderContent(\r\n\tcontent: string,\r\n\tselector = window.PineconeRouter.settings.viewSelector\r\n) {\r\n\t// replace the content of the selector with the fetched content\r\n\tdocument.querySelector(selector)!.innerHTML = content\r\n\t// @ts-ignore\r\n\tdocument.querySelector('[autofocus]')?.focus()\r\n}\r\n", "import Route from './route'\r\nimport type { Settings, Context, Middleware, Handler } from './types'\r\nimport { handle, match, middleware, validLink } from './utils'\r\n\r\nconst PineconeRouter = {\r\n\tversion: '3.1.1',\r\n\tname: 'pinecone-router',\r\n\tsettings: <Settings>{\r\n\t\thash: false,\r\n\t\tbasePath: '/',\r\n\t},\r\n\r\n\t/**\r\n\t * @description The handler for 404 pages, can be overwritten by a notfound route\r\n\t */\r\n\tnotfound: new Route('notfound'),\r\n\t/**\r\n\t * @type Route[]\r\n\t * @summary array of routes instantiated from the Route class.\r\n\t */\r\n\troutes: <Route[]>[],\r\n\t/**\r\n\t * @type {Context}\r\n\t * @summary The context object for current path.\r\n\t */\r\n\tcurrentContext: <Context>{},\r\n\t/**\r\n\t * Add a new route\r\n\t */\r\n\tadd(path: string, options?: {}) {\r\n\t\t// check if the route was registered on the same router.\r\n\t\tif (this.routes.find((r: Route) => r.path == path) != null) {\r\n\t\t\tthrow new Error('Pinecone Router: route already exist')\r\n\t\t}\r\n\r\n\t\tthis.routes.push(new Route(path, options))\r\n\t},\r\n\t/**\r\n\t * Remove a route\r\n\t */\r\n\tremove(path: string) {\r\n\t\tthis.routes = this.routes.filter((r: Route) => r.path != path)\r\n\t},\r\n\t/**\r\n\t * @event pinecone-start\r\n\t * @summary be dispatched to the window after before page start loading.\r\n\t */\r\n\tloadStart: new Event('pinecone-start'),\r\n\r\n\t/**\r\n\t * @event pinecone-end\r\n\t * @summary will be dispatched to the window after the views are fetched\r\n\t */\r\n\tloadEnd: new Event('pinecone-end'),\r\n}\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tPineconeRouter: typeof PineconeRouter\r\n\t\tPineconeRouterMiddlewares: Array<Middleware>\r\n\t}\r\n}\r\n\r\nexport default function (Alpine) {\r\n\twindow.PineconeRouter = Alpine.reactive(PineconeRouter)\r\n\r\n\tAlpine.directive(\r\n\t\t'route',\r\n\t\t(el, { value, modifiers, expression }, { Alpine, effect, cleanup }) => {\r\n\t\t\tlet path = expression\r\n\t\t\tif (path.indexOf('#') > -1) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t`Pinecone Router: A route's path may not have a hash character.`\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tmiddleware('onBeforeRouteProcessed', el, path)\r\n\t\t\tif (path != 'notfound') {\r\n\t\t\t\t// if specified add the basePath\r\n\t\t\t\tif (window.PineconeRouter.settings.basePath != '/') {\r\n\t\t\t\t\tpath = window.PineconeRouter.settings.basePath + path\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// register the new route if possible\r\n\t\t\t\twindow.PineconeRouter.add(path)\r\n\t\t\t}\r\n\t\t\tmiddleware('onAfterRouteProcessed', el, path)\r\n\t\t}\r\n\t)\r\n\r\n\tAlpine.directive(\r\n\t\t'handler',\r\n\t\t(\r\n\t\t\tel,\r\n\t\t\t{ value, modifiers, expression },\r\n\t\t\t{ Alpine, effect, cleanup, evaluate }\r\n\t\t) => {\r\n\t\t\tif (!el.hasAttribute('x-route')) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t`Pinecone Router: x-handler must be set alongside x-route.`\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tlet handlers\r\n\t\t\t// check if the handlers expression is an array\r\n\t\t\t// if not make it one\r\n\t\t\tif (\r\n\t\t\t\t!(expression.startsWith('[') && expression.endsWith(']')) &&\r\n\t\t\t\t!(expression.startsWith('Array(') && expression.endsWith(')'))\r\n\t\t\t) {\r\n\t\t\t\texpression = `[${expression}]`\r\n\t\t\t}\r\n\t\t\tlet evaluatedExpression = evaluate(expression)\r\n\t\t\tlet path = el.getAttribute('x-route')\r\n\t\t\tif (typeof evaluatedExpression == 'object')\r\n\t\t\t\thandlers = evaluatedExpression\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t`Pinecone Router: Invalid handler type: ${typeof evaluatedExpression}.`\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (path == 'notfound')\r\n\t\t\t\twindow.PineconeRouter.notfound.handlers = handlers\r\n\t\t\telse {\r\n\t\t\t\t// if specified add the basePath\r\n\t\t\t\tif (window.PineconeRouter.settings.basePath != '/') {\r\n\t\t\t\t\tpath = window.PineconeRouter.settings.basePath + path\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add handlers to the route\r\n\t\t\t\tlet i = window.PineconeRouter.routes.findIndex(\r\n\t\t\t\t\t(r) => r.path == path\r\n\t\t\t\t)\r\n\t\t\t\twindow.PineconeRouter.routes[i].handlers = handlers\r\n\t\t\t}\r\n\t\t}\r\n\t)\r\n\r\n\tAlpine.magic('router', (el, Alpine) => window.PineconeRouter.currentContext)\r\n\r\n\tdocument.addEventListener('alpine:initialized', () => {\r\n\t\tmiddleware('init')\r\n\t\t// virtually navigate the path on the first page load\r\n\t\t// this will register the path in history and sets the pathvariable\r\n\t\t// navigate(window.location.pathname, false, true)\r\n\t\tif (!window.PineconeRouter.settings.hash) {\r\n\t\t\t// navigate to the current page to handle it\r\n\t\t\t// ONLY if we not using hash routing for the default router\r\n\t\t\tnavigate(window.location.pathname, false, true)\r\n\t\t} else {\r\n\t\t\tnavigate(window.location.hash.substring(1), false, true)\r\n\t\t}\r\n\t})\r\n\r\n\t// handle navigation events not emitted by links, for example, back button.\r\n\twindow.addEventListener('popstate', () => {\r\n\t\tif (window.PineconeRouter.settings.hash) {\r\n\t\t\tif (window.location.hash != '') {\r\n\t\t\t\tnavigate(window.location.hash.substring(1), true)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnavigate(window.location.pathname, true)\r\n\t\t}\r\n\t})\r\n\r\n\t// intercept click event in links\r\n\tinterceptLinks()\r\n}\r\n\r\n/**\r\n * @description Add a handler to click events on all valid links\r\n */\r\nfunction interceptLinks() {\r\n\twindow.document.body.addEventListener(\r\n\t\tdocument.ontouchstart ? 'touchstart' : 'click',\r\n\t\tfunction (e) {\r\n\t\t\tif (\r\n\t\t\t\te.metaKey ||\r\n\t\t\t\te.ctrlKey ||\r\n\t\t\t\te.shiftKey ||\r\n\t\t\t\te.detail != 1 ||\r\n\t\t\t\te.defaultPrevented\r\n\t\t\t) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// ensure link\r\n\t\t\t// use shadow dom when available if not, fall back to composedPath()\r\n\t\t\t// for browsers that only have shady\r\n\t\t\tlet el = e.target\r\n\r\n\t\t\tlet eventPath: any = e.composedPath()\r\n\t\t\tif (eventPath) {\r\n\t\t\t\tfor (let i = 0; i < eventPath.length; i++) {\r\n\t\t\t\t\tif (!eventPath[i].nodeName) continue\r\n\t\t\t\t\tif (eventPath[i].nodeName.toUpperCase() !== 'A') continue\r\n\t\t\t\t\tif (!eventPath[i].href) continue\r\n\r\n\t\t\t\t\tel = eventPath[i]\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (el == null) return\r\n\t\t\t// allow skipping link\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (el.hasAttribute('native')) return\r\n\t\t\tlet ret = validLink(el, window.PineconeRouter.settings.hash)\r\n\t\t\tif (!ret.valid) return\r\n\t\t\t// prevent default behavior.\r\n\t\t\tif (e.stopImmediatePropagation) e.stopImmediatePropagation()\r\n\t\t\tif (e.stopPropagation) e.stopPropagation()\r\n\t\t\te.preventDefault()\r\n\t\t\tnavigate(ret.link)\r\n\t\t}\r\n\t)\r\n}\r\n\r\n/**\r\n *  Go to the specified path without reloading\r\n * @param {string} path the path with no hash even if using hash routing\r\n * @param {boolean} fromPopState this will be set to true if called from window.onpopstate event\r\n * @param {boolean} firstLoad this will be set to true if this is the first page loaded, also from page reload\r\n */\r\nfunction navigate(path, fromPopState = false, firstLoad = false) {\r\n\tif (!path) path = '/'\r\n\twindow.PineconeRouter.currentContext.path = path\r\n\r\n\t// only add basePath if it was set\r\n\t// if not using hash routing\r\n\t// and if it wasn't added already\r\n\tif (!window.PineconeRouter.settings.hash) {\r\n\t\tif (\r\n\t\t\twindow.PineconeRouter.settings.basePath != '/' &&\r\n\t\t\t!path.startsWith(window.PineconeRouter.settings.basePath)\r\n\t\t) {\r\n\t\t\tpath = window.PineconeRouter.settings.basePath + path\r\n\t\t}\r\n\t\tif (\r\n\t\t\tpath == window.PineconeRouter.settings.basePath &&\r\n\t\t\t!path.endsWith('/')\r\n\t\t) {\r\n\t\t\tpath += '/'\r\n\t\t}\r\n\t}\r\n\r\n\tconst route: Route | undefined = window.PineconeRouter.routes.find(\r\n\t\t(route: Route) => {\r\n\t\t\tlet m = match(path, route.path)\r\n\t\t\troute.params = m != false ? m : {}\r\n\t\t\treturn m != false\r\n\t\t}\r\n\t)\r\n\r\n\tlet context =\r\n\t\ttypeof route == 'undefined'\r\n\t\t\t? buildContext('notfound', path, [])\r\n\t\t\t: buildContext(route.path, path, route.params)\r\n\r\n\twindow.PineconeRouter.currentContext = context\r\n\t// window.dispatchEvent(window.PineconeRouter.loadStart)\r\n\t// the middleware may return 'stop' to stop execution of this function\r\n\tif (\r\n\t\tmiddleware('onBeforeHandlersExecuted', route, path, firstLoad) == 'stop'\r\n\t)\r\n\t\treturn\r\n\t// do not call pushstate from popstate event https://stackoverflow.com/a/50830905\r\n\tif (!fromPopState) {\r\n\t\tlet fullPath = ''\r\n\t\tif (window.PineconeRouter.settings.hash) {\r\n\t\t\tfullPath = '#'\r\n\t\t\tfullPath += window.location.search + path\r\n\t\t} else {\r\n\t\t\tfullPath = path + window.location.search + window.location.hash\r\n\t\t}\r\n\t\t// don't create duplicate history entry on first page load\r\n\t\tif (!firstLoad) history.pushState({ path: fullPath }, '', fullPath)\r\n\t\telse {\r\n\t\t\tif (window.PineconeRouter.settings.hash) {\r\n\t\t\t\tif (path == '/') {\r\n\t\t\t\t\treturn navigate('/', false, false)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// only call handle if the route has a handler\r\n\t// or the route doesnt exist and there is a not found handler\r\n\tif (\r\n\t\t(!route && !!window.PineconeRouter.notfound.handlers) ||\r\n\t\t(route && !!route.handlers)\r\n\t) {\r\n\t\tif (\r\n\t\t\t!handle(\r\n\t\t\t\troute?.handlers ?? window.PineconeRouter.notfound.handlers,\r\n\t\t\t\tcontext\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\twindow.dispatchEvent(window.PineconeRouter.loadEnd)\r\n\t\t\treturn // do not call onHandlersExecuted middlewares\r\n\t\t}\r\n\t}\r\n\tmiddleware('onHandlersExecuted', route, path, firstLoad)\r\n}\r\n\r\n/**\r\n * Create the context object\r\n */\r\nexport function buildContext(route: string, path: string, params: {}): Context {\r\n\treturn {\r\n\t\troute: route,\r\n\t\tpath: path,\r\n\t\tparams: params,\r\n\t\tquery: window.location.search.substring(1), // query w/out leading '?'\r\n\t\thash: window.location.hash.substring(1), // hash without leading '#'\r\n\t\tredirect(path) {\r\n\t\t\tnavigate(path)\r\n\t\t\treturn 'stop'\r\n\t\t},\r\n\t\tnavigate(path) {\r\n\t\t\tnavigate(path)\r\n\t\t},\r\n\t}\r\n}\r\n", "import magic from '../src/index.js'\r\n\r\ndocument.addEventListener('alpine:init', () => {\r\n  window.Alpine.plugin(magic)\r\n})\r\n"],
  "mappings": "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",
  "names": ["Route", "path", "options", "opt", "route_default", "isLocation", "segmentize", "url", "match", "routePath", "reg", "c", "matches", "ret", "p", "i", "r", "urlSeg", "route", "max", "param", "flags", "plus", "star", "val", "toURL", "href", "anc", "sameOrigin", "loc", "samePath", "validLink", "el", "hash", "svg", "handle", "handlers", "context", "middleware", "func", "args", "plugin", "PineconeRouter", "route_default", "path", "options", "r", "src_default", "Alpine", "el", "value", "modifiers", "expression", "effect", "cleanup", "middleware", "evaluate", "handlers", "evaluatedExpression", "i", "navigate", "interceptLinks", "eventPath", "ret", "validLink", "fromPopState", "firstLoad", "route", "m", "match", "context", "buildContext", "fullPath", "handle", "params", "src_default"]
}
