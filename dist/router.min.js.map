{
  "version": 3,
  "sources": ["../src/route.ts", "../src/utils.ts", "../src/index.ts", "../builds/cdn.js"],
  "sourcesContent": ["import type { Handler } from './types'\r\n\r\nclass Route {\r\n\tparams: { [key: string]: any } = {}\r\n\tpath: string\r\n\thandlers: Handler[] = []\r\n\tconstructor(path: string, options = {}) {\r\n\t\tthis.path = path\r\n\t\tObject.keys(options).forEach((opt) => {\r\n\t\t\tthis[opt] = options[opt]\r\n\t\t})\r\n\t}\r\n\ttemplate: ''\r\n\thandlersDone: boolean = false\r\n\tcancelHandlers: boolean\r\n}\r\n\r\nexport default Route\r\n", "var isLocation = window.location\r\n\r\n/**\r\n * taken from preact-router\r\n * https://github.com/preactjs/preact-router\r\n * @param url url to segmentize\r\n * @returns\r\n */\r\nfunction segmentize(url: string): string[] {\r\n\treturn url.replace(/(^\\/+|\\/+$)/g, '').split('/')\r\n}\r\n\r\n/**\r\n * check if a path match with this route\r\n * taken from preact-router\r\n * https://github.com/preactjs/preact-router\r\n * @param path {string}\r\n * @param routePath {string}\r\n * @returns {false|object}\r\n */\r\nexport function match(url: string, routePath: string): false | object {\r\n\tlet reg = /(?:\\?([^#]*))?(#.*)?$/,\r\n\t\tc = url.match(reg),\r\n\t\tmatches: any = {},\r\n\t\tret\r\n\tif (c && c[1]) {\r\n\t\tlet p = c[1].split('&')\r\n\t\tfor (let i = 0; i < p.length; i++) {\r\n\t\t\tlet r = p[i].split('=')\r\n\t\t\tmatches[decodeURIComponent(r[0])] = decodeURIComponent(\r\n\t\t\t\tr.slice(1).join('=')\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\tlet urlSeg = segmentize(url.replace(reg, '')),\r\n\t\troute: string[] = segmentize(routePath || ''),\r\n\t\tmax = Math.max(urlSeg.length, route.length)\r\n\tfor (let i = 0; i < max; i++) {\r\n\t\tif (route[i] && route[i].charAt(0) === ':') {\r\n\t\t\tlet param: string = route[i].replace(/(^:|[+*?]+$)/g, ''),\r\n\t\t\t\tflags: string = (route[i].match(/[+*?]+$/) || {}).toString()[0],\r\n\t\t\t\tplus = ~flags.indexOf('+'),\r\n\t\t\t\tstar = ~flags.indexOf('*'),\r\n\t\t\t\tval = urlSeg[i] || ''\r\n\t\t\tif (!val && !star && (flags.indexOf('?') < 0 || plus)) {\r\n\t\t\t\tret = false\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tmatches[param] = decodeURIComponent(val)\r\n\t\t\tif (plus || star) {\r\n\t\t\t\tmatches[param] = urlSeg\r\n\t\t\t\t\t.slice(i)\r\n\t\t\t\t\t.map(decodeURIComponent)\r\n\t\t\t\t\t.join('/')\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t} else if (route[i] !== urlSeg[i]) {\r\n\t\t\tret = false\r\n\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\tif (ret === false) return false\r\n\treturn matches\r\n}\r\n\r\n/**\r\n * Convert to a URL object\r\n * https://github.com/visionmedia/page.js/blob/4f9991658f9b9e3de9b6059bade93693af24d6bd/page.js#L888\r\n */\r\nfunction toURL(href: string): URL | HTMLAnchorElement {\r\n\tif (typeof URL === 'function' && isLocation) {\r\n\t\treturn new URL(href, window.location.toString())\r\n\t} else {\r\n\t\tvar anc = window.document.createElement('a')\r\n\t\tanc.href = href\r\n\t\treturn anc\r\n\t}\r\n}\r\n\r\n/**\r\n * Check if `href` is the same origin.\r\n * https://github.com/visionmedia/page.js/blob/4f9991658f9b9e3de9b6059bade93693af24d6bd/page.js#L888\r\n */\r\nexport function sameOrigin(href: string) {\r\n\tif (!href || !isLocation) return false\r\n\r\n\tvar url = toURL(href)\r\n\tvar loc = window.location\r\n\r\n\t/*\r\n\tWhen the port is the default http port 80 for http, or 443 for\r\n\thttps, internet explorer 11 returns an empty string for loc.port,\r\n\tso we need to compare loc.port with an empty string if url.port\r\n\tis the default port 80 or 443.\r\n\tAlso the comparison with `port` is changed from `===` to `==` because\r\n\t`port` can be a string sometimes. This only applies to ie11.\r\n\t*/\r\n\treturn (\r\n\t\tloc.protocol === url.protocol &&\r\n\t\tloc.hostname === url.hostname &&\r\n\t\t(loc.port === url.port ||\r\n\t\t\t(loc.port === '' && (url.port == '80' || url.port == '443')))\r\n\t) // jshint ignore:line\r\n}\r\n\r\nexport function samePath(url: any) {\r\n\tif (!isLocation) return false\r\n\tvar loc = window.location\r\n\treturn url.pathname === loc.pathname && url.search === loc.search\r\n}\r\n\r\n/**\r\n * Check if the anchor element point to a navigation route.\r\n * @param {any} el The anchor element or Event target\r\n * @param {boolean} hash Set to true when using hash routing\r\n * @returns {object} {valid: boolean, link: string}\r\n */\r\nexport function validLink(\r\n\tel: any,\r\n\thash: boolean\r\n): { valid: boolean; link: string } {\r\n\t// the object we'll return\r\n\tlet ret = { valid: false, link: '' }\r\n\r\n\t// The checks in this block are taken from\r\n\t// https://github.com/visionmedia/page.js/blob/master/index.js#L370\r\n\r\n\t// continue ensure link\r\n\r\n\t// el.nodeName for svg links are 'a' instead of 'A'\r\n\t// traverse up till we find an anchor tag, since clicks\r\n\t// on image links for example set the target as img instead of a.\r\n\twhile (el && 'A' !== el.nodeName.toUpperCase()) el = el.parentNode\r\n\tif (!el || 'A' !== el.nodeName.toUpperCase()) return ret\r\n\r\n\t// check if link is inside an svg\r\n\t// in this case, both href and target are always inside an object\r\n\tvar svg =\r\n\t\ttypeof el.href === 'object' &&\r\n\t\tel.href.constructor.name === 'SVGAnimatedString'\r\n\r\n\t// Ignore if tag has\r\n\t// 1. \"download\" attribute\r\n\t// 2. rel=\"external\" attribute\r\n\tif (el.hasAttribute('download') || el.getAttribute('rel') === 'external') {\r\n\t\treturn ret\r\n\t}\r\n\r\n\t// ensure non-hash for the same path\r\n\tret.link = el.getAttribute('href') ?? ''\r\n\tif (!hash && samePath(el) && (el.hash || '#' === ret.link)) {\r\n\t\treturn ret\r\n\t}\r\n\r\n\t// Check for mailto: in the href\r\n\tif (ret.link && ret.link.indexOf('mailto:') > -1) return ret\r\n\r\n\t// check target\r\n\t// svg target is an object and its desired value is in .baseVal property\r\n\tif (svg ? el.target.baseVal : el.target) return ret\r\n\r\n\t// x-origin\r\n\t// note: svg links that are not relative don't call click events (and skip page.js)\r\n\t// consequently, all svg links tested inside page.js are relative and in the same origin\r\n\tif (!svg && !sameOrigin(el.href)) return ret\r\n\r\n\tret.valid = true\r\n\treturn ret\r\n}\r\n\r\n/**\r\n * Call a function on all middlewares loaded, if any.\r\n * @param {string} func middleware function to call.\r\n * @param {any} args arguments to pass to the function.\r\n * @returns {boolean} false if the middleware function return false, i.e. it want to stop execution of the function and return.\r\n */\r\nexport function middleware(func: string, ...args: any): string | undefined {\r\n\tif (!window.PineconeRouterMiddlewares) return\r\n\tfor (const i in window.PineconeRouterMiddlewares) {\r\n\t\tlet plugin: any = window.PineconeRouterMiddlewares[i]\r\n\t\tif (plugin[func] == null) return\r\n\t\tlet ret = plugin[func](...args)\r\n\t\t// the return of the function will only be 'stop'\r\n\t\t// if the middleware request stopping the navigate function.\r\n\t\tif (ret == 'stop') return 'stop'\r\n\t}\r\n}\r\n\r\nexport function fetchError(error: string) {\r\n\tdocument.dispatchEvent(\r\n\t\tnew CustomEvent('fetch-error', { detail: error })\r\n\t)\r\n}", "import Route from './route'\r\nimport type { Settings, Context, Middleware, Handler } from './types'\r\nimport { fetchError, match, middleware, validLink } from './utils'\r\n\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tPineconeRouter: {\r\n\t\t\tversion: string\r\n\t\t\tname: string\r\n\t\t\tsettings: Settings\r\n\t\t\tnotfound: Route\r\n\t\t\troutes: Route[]\r\n\t\t\tcontext: Context\r\n\t\t\tloadStart: Event\r\n\t\t\tloadEnd: Event\r\n\t\t\tadd: (path: string, options?: {}) => number\r\n\t\t\tremove: (path: string) => void\r\n\t\t}\r\n\t\tPineconeRouterMiddlewares: Array<Middleware>\r\n\t}\r\n\tinterface HTMLTemplateElement {\r\n\t\t_x_undoIf: Function\r\n\t\t_x_currentIfEl: Element\r\n\t}\r\n}\r\n\r\nexport default function (Alpine) {\r\n\r\n\tconst PineconeRouter = Alpine.reactive(<Window[\"PineconeRouter\"]>{\r\n\t\tversion: '4.1.0',\r\n\t\tname: 'pinecone-router',\r\n\r\n\t\tsettings: <Settings>{\r\n\t\t\thash: false,\r\n\t\t\tbasePath: '/',\r\n\t\t\ttemplateTargetId: null\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @description The handler for 404 pages, can be overwritten by a notfound route\r\n\t\t */\r\n\t\tnotfound: new Route('notfound'),\r\n\r\n\t\t/**\r\n\t\t * @type Route[]\r\n\t\t * @summary array of routes instantiated from the Route class.\r\n\t\t */\r\n\t\troutes: <Route[]>[],\r\n\r\n\t\t/**\r\n\t\t * @type {Context}\r\n\t\t * @summary The context object for current path.\r\n\t\t */\r\n\t\tcontext: <Context>{\r\n\t\t\troute: '',\r\n\t\t\tpath: '',\r\n\t\t\tparams: {},\r\n\t\t\tquery: window.location.search.substring(1),\r\n\t\t\thash: window.location.hash.substring(1),\r\n\t\t\tredirect(path) {\r\n\t\t\t\tnavigate(path)\r\n\t\t\t\treturn 'stop'\r\n\t\t\t},\r\n\t\t\tnavigate(path) {\r\n\t\t\t\tnavigate(path)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add a new route\r\n\t\t */\r\n\t\tadd(path: string, options?: {}) {\r\n\t\t\t// check if the route was registered on the same router.\r\n\t\t\tif (this.routes.find((r: Route) => r.path == path) != null) {\r\n\t\t\t\tthrow new Error('Pinecone Router: route already exist')\r\n\t\t\t}\r\n\r\n\t\t\treturn this.routes.push(new Route(path, options)) - 1\r\n\t\t},\r\n\t\t/**\r\n\t\t * Remove a route\r\n\t\t */\r\n\t\tremove(path: string) {\r\n\t\t\tthis.routes = this.routes.filter((r: Route) => r.path != path)\r\n\t\t},\r\n\t\t/**\r\n\t\t * @event pinecone-start\r\n\t\t * @summary be dispatched to the window after before page start loading.\r\n\t\t */\r\n\t\tloadStart: new Event('pinecone-start'),\r\n\r\n\t\t/**\r\n\t\t * @event pinecone-end\r\n\t\t * @summary will be dispatched to the window after the views are fetched\r\n\t\t */\r\n\t\tloadEnd: new Event('pinecone-end'),\r\n\t})\r\n\r\n\twindow.PineconeRouter = PineconeRouter\r\n\r\n\tvar loadingTemplates: { [key: string]: Promise<string> } = {}\r\n\tvar cachedTemplates: { [key: string]: string } = {}\r\n\tconst inMakeProgress = new Set()\r\n\tvar isPreloading: any\r\n\r\n\tconst load = (el: HTMLTemplateElement, url: string) => {\r\n\t\tif (loadingTemplates[url]) {\r\n\t\t\tloadingTemplates[url].then(html => el.innerHTML = html)\r\n\t\t} else {\r\n\t\t\tloadingTemplates[url] = fetch(url).then(r => {\r\n\t\t\t\tif (!r.ok) {\r\n\t\t\t\t\tfetchError(r.statusText);\r\n\t\t\t\t\treturn null\r\n\t\t\t\t}\r\n\t\t\t\treturn r.text()\r\n\t\t\t}).then(html => {\r\n\t\t\t\tif (html == null) {\r\n\t\t\t\t\tcachedTemplates[url] = null;\r\n\t\t\t\t\tloadingTemplates[url] = null\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\tcachedTemplates[url] = html\r\n\t\t\t\tel.innerHTML = html\r\n\t\t\t\treturn html\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn loadingTemplates[url]\r\n\t}\r\n\r\n\tconst make = (el: HTMLTemplateElement, expression: string, targetEl?: HTMLElement) => {\r\n\t\tif (inMakeProgress.has(expression)) return\r\n\t\tinMakeProgress.add(expression)\r\n\r\n\t\tconst clone = (el.content.cloneNode(true) as HTMLElement).firstElementChild\r\n\r\n\t\tif (!clone) return\r\n\r\n\t\tAlpine.addScopeToNode(clone, {}, el)\r\n\r\n\t\tAlpine.mutateDom(() => {\r\n\t\t\tif (targetEl != null) {\r\n\t\t\t\ttargetEl.appendChild(clone)\r\n\t\t\t} else\r\n\t\t\t\tel.after(clone)\r\n\t\t\tAlpine.initTree(clone)\r\n\t\t})\r\n\r\n\t\tel._x_currentIfEl = clone\r\n\r\n\t\tel._x_undoIf = () => {\r\n\t\t\tclone.remove()\r\n\r\n\t\t\tdelete el._x_currentIfEl\r\n\t\t}\r\n\r\n\t\tAlpine.nextTick(() => inMakeProgress.delete(expression))\r\n\t}\r\n\r\n\tfunction hide(el: HTMLTemplateElement) {\r\n\t\tif (el._x_undoIf) {\r\n\t\t\tel._x_undoIf()\r\n\t\t\tdelete el._x_undoIf\r\n\t\t}\r\n\t}\r\n\r\n\tfunction show(el: HTMLTemplateElement, expression: string, url?: string, targetEl?: HTMLElement) {\r\n\t\tif (el._x_currentIfEl) return el._x_currentIfEl\r\n\r\n\t\tif (el.content.firstElementChild) {\r\n\t\t\tmake(el, expression)\r\n\t\t\tendLoading()\r\n\t\t} else if (url) {\r\n\t\t\t// Since during loading, the content is automatically put inside the template\r\n\t\t\t// This first case will only happen if the content of the template was cleared somehow\r\n\t\t\t// Likely manually\r\n\t\t\tif (cachedTemplates[url]) {\r\n\t\t\t\tel.innerHTML = cachedTemplates[url]\r\n\t\t\t\tmake(el, expression, targetEl)\r\n\t\t\t\tendLoading()\r\n\t\t\t} else {\r\n\t\t\t\t// This second case is that it didn't finish loading\r\n\t\t\t\tif (isPreloading) {\r\n\t\t\t\t\tisPreloading.then(() => make(el, expression, targetEl))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tload(el, url).then(() => make(el, expression, targetEl)).finally(() => endLoading())\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst startLoading = () => {\r\n\t\tdocument.dispatchEvent(PineconeRouter.loadStart)\r\n\t}\r\n\r\n\tconst endLoading = () => {\r\n\t\tdocument.dispatchEvent(PineconeRouter.loadEnd)\r\n\t}\r\n\r\n\tconst addBasePath = (path) => {\r\n\t\tif (!PineconeRouter.settings.hash && PineconeRouter.settings.basePath != '/') {\r\n\t\t\treturn PineconeRouter.settings.basePath + path\r\n\t\t} return path\r\n\t}\r\n\r\n\tconst findRouteIndex = (path) => {\r\n\t\treturn PineconeRouter.routes.findIndex(\r\n\t\t\t(r) => r.path == path\r\n\t\t)\r\n\t}\r\n\r\n\tAlpine.directive(\r\n\t\t'route',\r\n\t\t(el: HTMLTemplateElement, { expression }, { effect, cleanup }) => {\r\n\t\t\tlet path = expression\r\n\r\n\t\t\tmiddleware('onBeforeRouteProcessed', el, path)\r\n\r\n\t\t\tif (path.indexOf('#') > -1) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t`Pinecone Router: A route's path may not have a hash character.`\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet routeIndex = null\r\n\r\n\t\t\tif (path != 'notfound') {\r\n\t\t\t\t// if specified add the basePath\r\n\t\t\t\tpath = addBasePath(path)\r\n\t\t\t\t// register the new route if possible\r\n\t\t\t\trouteIndex = PineconeRouter.add(path)\r\n\t\t\t}\r\n\r\n\t\t\tlet route = PineconeRouter.routes[routeIndex] ?? PineconeRouter.notfound\r\n\r\n\t\t\t// this will show inline templates, you can't mix inline and x-template\r\n\t\t\t// so we check if we already have x-template\r\n\t\t\t// this is due to x-template also putting the template inside el.content.firstElementChild\r\n\t\t\t// so we omit the x-template this code will run both here and in x-template directive\r\n\t\t\t// and also x-template.target will not work!\r\n\t\t\tif (!el.hasAttribute('x-template') && el.content.firstElementChild != null) {\r\n\t\t\t\tAlpine.nextTick(() => {\r\n\t\t\t\t\teffect(() => {\r\n\t\t\t\t\t\tlet found = route.handlersDone && PineconeRouter.context.route == path\r\n\t\t\t\t\t\tfound ? show(el, expression) : hide(el)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tcleanup(() => {\r\n\t\t\t\tel._x_undoIf && el._x_undoIf();\r\n\t\t\t\tPineconeRouter.remove(path);\r\n\t\t\t})\r\n\r\n\t\t\tmiddleware('onAfterRouteProcessed', el, path)\r\n\r\n\r\n\t\t}\r\n\t)\r\n\r\n\tAlpine.directive(\r\n\t\t'handler',\r\n\t\t(\r\n\t\t\tel,\r\n\t\t\t{ expression },\r\n\t\t\t{ evaluate, cleanup }\r\n\t\t) => {\r\n\t\t\tif (!el.hasAttribute('x-route')) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t`Pinecone Router: x-handler must be set on the same element as x-route.`\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\tlet handlers\r\n\r\n\t\t\t// check if the handlers expression is an array\r\n\t\t\t// if not make it one\r\n\t\t\tif (\r\n\t\t\t\t!(expression.startsWith('[') && expression.endsWith(']')) &&\r\n\t\t\t\t!(expression.startsWith('Array(') && expression.endsWith(')'))\r\n\t\t\t) {\r\n\t\t\t\texpression = `[${expression}]`\r\n\t\t\t}\r\n\r\n\t\t\tlet evaluatedExpression = evaluate(expression)\r\n\t\t\tlet path = el.getAttribute('x-route')\r\n\r\n\t\t\tif (typeof evaluatedExpression == 'object')\r\n\t\t\t\thandlers = evaluatedExpression\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t`Pinecone Router: Invalid handler type: ${typeof evaluatedExpression}.`\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\t// add `this` context for handlers inside an Alpine.component\r\n\t\t\tfor (let index = 0; index < handlers.length; index++) {\r\n\t\t\t\thandlers[index] = handlers[index].bind(Alpine.$data(el))\r\n\t\t\t}\r\n\r\n\t\t\tlet route\r\n\r\n\t\t\tif (path == 'notfound')\r\n\t\t\t\troute = PineconeRouter.notfound\r\n\t\t\telse {\r\n\t\t\t\t// if specified add the basePath\r\n\t\t\t\tpath = addBasePath(path)\r\n\t\t\t\t// add handlers to the route\r\n\t\t\t\tlet i = findRouteIndex(path)\r\n\t\t\t\troute = PineconeRouter.routes[i]\r\n\t\t\t}\r\n\t\t\troute.handlers = handlers\r\n\r\n\t\t\tcleanup(() => {\r\n\t\t\t\troute.handlers = []\r\n\t\t\t\troute.handlersDone = true\r\n\t\t\t})\r\n\t\t}\r\n\t)\r\n\r\n\tAlpine.directive(\r\n\t\t'template',\r\n\t\t(el: HTMLTemplateElement, { modifiers, expression }, { Alpine, effect, cleanup }) => {\r\n\r\n\t\t\tif (!el.hasAttribute(\"x-route\")) throw new Error(\"Pinecone Router: x-template must be used on the same element as x-route.\")\r\n\r\n\t\t\tlet url: string = expression\r\n\r\n\t\t\tlet target = modifierValue(modifiers, 'target', null) ?? window.PineconeRouter.settings.templateTargetId\r\n\t\t\tlet targetEl = document.getElementById(target)\r\n\r\n\t\t\tif (target && !targetEl)\r\n\t\t\t\tthrow new Error(\"Pinecone Router: Can't find an element with the suplied x-template target ID (\" + target + \")\")\r\n\r\n\t\t\tif (modifiers.includes(\"preload\")) {\r\n\t\t\t\tisPreloading = load(el, url).finally(() => isPreloading = null)\r\n\t\t\t}\r\n\r\n\t\t\tlet path = el.getAttribute(\"x-route\")\r\n\t\t\tlet route;\r\n\t\t\tlet routeIndex\r\n\r\n\t\t\tif (path == 'notfound') {\r\n\t\t\t\tPineconeRouter.notfound.template = url\r\n\t\t\t\troute = PineconeRouter.notfound\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpath = addBasePath(path)\r\n\t\t\t\trouteIndex = findRouteIndex(path)\r\n\t\t\t\tPineconeRouter.routes[routeIndex].template = url\r\n\t\t\t\troute = PineconeRouter.routes[routeIndex]\r\n\t\t\t}\r\n\r\n\r\n\t\t\tAlpine.nextTick(() => {\r\n\t\t\t\teffect(() => {\r\n\t\t\t\t\tlet found = route.handlersDone && PineconeRouter.context.route == route.path\r\n\t\t\t\t\tfound ? show(el, expression, url, targetEl) : hide(el)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tcleanup(() => {\r\n\t\t\t\tel._x_undoIf && el._x_undoIf();\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t)\r\n\r\n\tAlpine.$router = PineconeRouter.context\r\n\tAlpine.magic('router', () => PineconeRouter.context)\r\n\r\n\tdocument.addEventListener('alpine:initialized', () => {\r\n\t\tmiddleware('init')\r\n\t\t// virtually navigate the path on the first page load\r\n\t\t// this will register the path in history and sets the pathvariable\r\n\t\t// navigate(window.location.pathname, false, true)\r\n\t\tif (!PineconeRouter.settings.hash) {\r\n\t\t\t// navigate to the current page to handle it\r\n\t\t\t// ONLY if we not using hash routing for the default router\r\n\t\t\tnavigate(location.pathname, false, true)\r\n\t\t} else {\r\n\t\t\tnavigate(location.hash.substring(1), false, true)\r\n\t\t}\r\n\t})\r\n\r\n\t// handle navigation events not emitted by links, for example, back button.\r\n\twindow.addEventListener('popstate', () => {\r\n\t\tif (PineconeRouter.settings.hash) {\r\n\t\t\tif (window.location.hash != '') {\r\n\t\t\t\tnavigate(window.location.hash.substring(1), true)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnavigate(window.location.pathname, true)\r\n\t\t}\r\n\t})\r\n\r\n\t// intercept click event in links\r\n\tinterceptLinks()\r\n\r\n\t/**\r\n\t * @description Add a handler to click events on all valid links\r\n\t */\r\n\tfunction interceptLinks() {\r\n\t\twindow.document.body.addEventListener(\r\n\t\t\tdocument.ontouchstart ? 'touchstart' : 'click',\r\n\t\t\tfunction (e) {\r\n\t\t\t\tif (\r\n\t\t\t\t\te.metaKey ||\r\n\t\t\t\t\te.ctrlKey ||\r\n\t\t\t\t\te.shiftKey ||\r\n\t\t\t\t\te.defaultPrevented\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// ensure link\r\n\t\t\t\t// use shadow dom when available if not, fall back to composedPath()\r\n\t\t\t\t// for browsers that only have shady\r\n\t\t\t\tlet el = e.target\r\n\r\n\t\t\t\tlet eventPath: any = e.composedPath()\r\n\t\t\t\tif (eventPath) {\r\n\t\t\t\t\tfor (let i = 0; i < eventPath.length; i++) {\r\n\t\t\t\t\t\tif (!eventPath[i].nodeName) continue\r\n\t\t\t\t\t\tif (eventPath[i].nodeName.toUpperCase() !== 'A') continue\r\n\t\t\t\t\t\tif (!eventPath[i].href) continue\r\n\r\n\t\t\t\t\t\tel = eventPath[i]\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (el == null) return\r\n\t\t\t\t// allow skipping link\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (el.hasAttribute('native')) return\r\n\r\n\t\t\t\tlet ret = validLink(el, PineconeRouter.settings.hash)\r\n\r\n\t\t\t\tif (!ret.valid) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet route = PineconeRouter.routes[findRouteIndex(PineconeRouter.context.route)] ?? PineconeRouter.notfound\r\n\r\n\t\t\t\t// stop handlers in progress before navigating to the next page\r\n\t\t\t\tif (!route.handlersDone) {\r\n\t\t\t\t\troute.cancelHandlers = true\r\n\t\t\t\t\tendLoading()\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// prevent default behavior.\r\n\t\t\t\tif (e.stopImmediatePropagation) e.stopImmediatePropagation()\r\n\t\t\t\tif (e.stopPropagation) e.stopPropagation()\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\tnavigate(ret.link)\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t *  Go to the specified path without reloading\r\n\t * @param {string} path the path with no hash even if using hash routing\r\n\t * @param {boolean} fromPopState this will be set to true if called from window.onpopstate event\r\n\t * @param {boolean} firstLoad this will be set to true if this is the first page loaded, also from page reload\r\n\t */\r\n\tasync function navigate(path, fromPopState = false, firstLoad = false) {\r\n\t\tif (!path) path = '/'\r\n\t\tPineconeRouter.context.path = path\r\n\r\n\t\t// only add basePath if it was set\r\n\t\t// if not using hash routing\r\n\t\t// and if it wasn't added already\r\n\t\tif (!PineconeRouter.settings.hash) {\r\n\t\t\tif (\r\n\t\t\t\tPineconeRouter.settings.basePath != '/' &&\r\n\t\t\t\t!path.startsWith(PineconeRouter.settings.basePath)\r\n\t\t\t) {\r\n\t\t\t\tpath = PineconeRouter.settings.basePath + path\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tpath == PineconeRouter.settings.basePath &&\r\n\t\t\t\t!path.endsWith('/')\r\n\t\t\t) {\r\n\t\t\t\tpath += '/'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst route: Route = PineconeRouter.routes.find(\r\n\t\t\t(route: Route) => {\r\n\t\t\t\tlet m = match(path, route.path)\r\n\t\t\t\troute.params = m != false ? m : {}\r\n\t\t\t\treturn m != false\r\n\t\t\t}\r\n\t\t) ?? PineconeRouter.notfound\r\n\r\n\t\t// if the route has handlres, it will mark them unhandled\r\n\t\t// this is so templates wont render till then.\r\n\t\troute.handlersDone = !route.handlers.length\r\n\r\n\t\tif (route.handlers.length || route.template) {\r\n\t\t\tstartLoading()\r\n\t\t}\r\n\r\n\t\tlet context = buildContext(route.path, path, route.params)\r\n\r\n\t\tPineconeRouter.context = context\r\n\r\n\t\t// the middleware may return 'stop' to stop execution of this function\r\n\t\tif (\r\n\t\t\tmiddleware('onBeforeHandlersExecuted', route, path, firstLoad) == 'stop'\r\n\t\t) {\r\n\t\t\tendLoading()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\r\n\t\t// do not call pushstate from popstate event https://stackoverflow.com/a/50830905\r\n\t\tif (!fromPopState) {\r\n\t\t\tlet fullPath = ''\r\n\t\t\tif (PineconeRouter.settings.hash) {\r\n\t\t\t\tfullPath = '#'\r\n\t\t\t\tfullPath += window.location.search + path\r\n\t\t\t} else {\r\n\t\t\t\tfullPath = path + window.location.search + window.location.hash\r\n\t\t\t}\r\n\t\t\t// don't create duplicate history entry on first page load\r\n\t\t\tif (!firstLoad) history.pushState({ path: fullPath }, '', fullPath)\r\n\t\t\telse {\r\n\t\t\t\tif (PineconeRouter.settings.hash) {\r\n\t\t\t\t\tif (path == '/') {\r\n\t\t\t\t\t\tPineconeRouter.context = context\r\n\t\t\t\t\t\treturn navigate('/', false, false)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(route && route.handlers.length)\r\n\t\t) {\r\n\t\t\troute.cancelHandlers = false\r\n\t\t\tlet ok = await handle(route.handlers, context)\r\n\t\t\tif (!ok) {\r\n\t\t\t\tendLoading()\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\troute.handlersDone = true\r\n\t\t\tif (!route.template) endLoading()\r\n\t\t}\r\n\r\n\r\n\t\tmiddleware('onHandlersExecuted', route, path, firstLoad)\r\n\t}\r\n\r\n\tfunction buildContext(route: string, path: string, params: {}): Context {\r\n\t\treturn {\r\n\t\t\troute: route,\r\n\t\t\tpath: path,\r\n\t\t\tparams: params,\r\n\t\t\tquery: window.location.search.substring(1), // query w/out leading '?'\r\n\t\t\thash: window.location.hash.substring(1), // hash without leading '#'\r\n\t\t\tredirect(path) {\r\n\t\t\t\tnavigate(path)\r\n\t\t\t\treturn 'stop'\r\n\t\t\t},\r\n\t\t\tnavigate(path) {\r\n\t\t\t\tnavigate(path)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction modifierValue(modifiers, key, fallback) {\r\n\t\t// If the modifier isn't present, use the default.\r\n\t\tif (modifiers.indexOf(key) === -1) return fallback\r\n\r\n\t\t// If it IS present, grab the value after it\r\n\t\tconst rawValue = modifiers[modifiers.indexOf(key) + 1]\r\n\r\n\t\tif (!rawValue) return fallback\r\n\r\n\t\tif (key === 'target') {\r\n\t\t\tlet match = rawValue.match(/([a-z0-9_-]+)/)\r\n\t\t\tif (match) return match[1]\r\n\t\t}\r\n\t\treturn rawValue\r\n\t}\r\n\t/**\r\n\t * execute the handlers of routes that are given passing them the context.\r\n\t */\r\n\tasync function handle(handlers, context) {\r\n\t\tfor (let i = 0; i < handlers.length; i++) {\r\n\t\t\tif (typeof handlers[i] == 'function') {\r\n\t\t\t\t// stop if the handlers were canceled for example the user clicked a link\r\n\t\t\t\tlet route = PineconeRouter.routes[findRouteIndex(context.route)] ?? PineconeRouter.notfound\r\n\t\t\t\tif (route.cancelHandlers) {\r\n\t\t\t\t\troute.cancelHandlers = false\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\tlet result\r\n\t\t\t\tif (handlers[i].constructor.name === 'AsyncFunction')\r\n\t\t\t\t\tresult = await handlers[i](context)\r\n\t\t\t\telse\r\n\t\t\t\t\tresult = handlers[i](context)\r\n\t\t\t\t// if the handler redirected, return\r\n\t\t\t\tif (result == 'stop') return false\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true\r\n\t}\r\n}\r\n\r\n", "import magic from '../src/index.js'\r\n\r\ndocument.addEventListener('alpine:init', () => {\r\n  window.Alpine.plugin(magic)\r\n})\r\n"],
  "mappings": "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",
  "names": ["Route", "path", "options", "opt", "route_default", "isLocation", "segmentize", "url", "match", "routePath", "reg", "c", "matches", "ret", "p", "i", "r", "urlSeg", "route", "max", "param", "flags", "plus", "star", "val", "toURL", "href", "anc", "sameOrigin", "loc", "samePath", "validLink", "el", "hash", "svg", "middleware", "func", "args", "plugin", "fetchError", "error", "src_default", "Alpine", "PineconeRouter", "route_default", "path", "navigate", "options", "r", "loadingTemplates", "cachedTemplates", "inMakeProgress", "isPreloading", "load", "el", "url", "html", "fetchError", "make", "expression", "targetEl", "clone", "hide", "show", "endLoading", "startLoading", "addBasePath", "findRouteIndex", "effect", "cleanup", "middleware", "routeIndex", "route", "evaluate", "handlers", "evaluatedExpression", "index", "i", "modifiers", "target", "modifierValue", "interceptLinks", "e", "eventPath", "ret", "validLink", "fromPopState", "firstLoad", "m", "match", "context", "buildContext", "fullPath", "handle", "params", "key", "fallback", "rawValue", "result", "src_default"]
}
