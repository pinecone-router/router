{
  "version": 3,
  "sources": ["../src/route.ts", "../src/handler.ts", "../src/context.ts", "../src/templates.ts", "../src/errors.ts", "../src/utils.ts", "../src/router.ts", "../src/directives/x-template.ts", "../src/directives/x-handler.ts", "../src/directives/x-route.ts", "../src/links.ts", "../src/index.ts"],
  "sourcesContent": [
    "import { Context } from './context'\nimport type { Handler } from './handler'\n\nexport type Route = {\n\tmatch: (path: string) => MatchResult\n\tprogrammaticTemplates: boolean\n\ttemplateTargetId: string\n\thandlers: Handler[]\n\ttemplates: string[]\n\tpreload: boolean\n\tpattern?: RegExp\n\tpath: string\n}\n\nexport type MatchResult = {\n\tmatch: boolean\n\tparams?: Context['params']\n}\n\nexport type RouteOptions = {\n\ttemplateTargetId?: string\n\thandlers?: Handler[]\n\ttemplates?: string[]\n\tpreload?: boolean\n}\n\n/**\n * Creates a new Route object\n * @param {string} path - route path pattern\n * @param {RouteOptions} options - route configuration options\n * @returns {Route} - a route object\n */\nexport default function createRoute(\n\tpath: string,\n\t{\n\t\ttemplateTargetId = '',\n\t\ttemplates = [],\n\t\thandlers = [],\n\t\tpreload = false,\n\t}: RouteOptions = {},\n): Route {\n\t// Create the route object\n\tconst route: Route = {\n\t\tpattern: path.indexOf(':') !== -1 ? buildRegexp(path) : undefined,\n\t\tprogrammaticTemplates: !!templates.length,\n\t\ttemplateTargetId,\n\t\ttemplates,\n\t\thandlers,\n\t\tpreload,\n\t\tpath,\n\n\t\t/**\n\t\t * Check whether a path matches against this route\n\t\t * @param {string} path - path to match against\n\t\t * @returns {MatchResult}\n\t\t */\n\t\tmatch(path: string): MatchResult {\n\t\t\tif (this.pattern) {\n\t\t\t\tconst found = path.match(this.pattern)\n\t\t\t\tif (!found) return { match: false }\n\t\t\t\treturn { match: true, params: found.groups }\n\t\t\t}\n\t\t\treturn { match: path === this.path }\n\t\t},\n\t}\n\n\treturn route\n}\n\n// Based on https://github.com/shaunlee/alpinejs-router/blob/dev/src/pattern.js\nconst buildRegexp = (path: string): RegExp => {\n\tpath = path.endsWith('/') ? path.slice(0, -1) : path\n\tlet optional: boolean\n\tconst pattern = path\n\t\t.split('/')\n\t\t.map((segment, i) => {\n\t\t\tif (i == 0) return segment\n\t\t\tif (!segment.startsWith(':')) {\n\t\t\t\treturn '/' + segment\n\t\t\t}\n\t\t\tlet field = segment.substring(1)\n\t\t\tlet fieldPattern = '[^/]+'\n\n\t\t\t// Handle parameter modifiers\n\t\t\tif (field.endsWith('?')) {\n\t\t\t\tfield = field.slice(0, -1)\n\t\t\t\toptional = true\n\t\t\t} else if (field.endsWith('*')) {\n\t\t\t\tfield = field.slice(0, -1)\n\t\t\t\tfieldPattern = `.*`\n\t\t\t} else if (field.includes('(')) {\n\t\t\t\tconst ef = field.match(/\\((.+?)\\)/)\n\t\t\t\tif (ef) {\n\t\t\t\t\tfield = field.substring(0, field.indexOf('('))\n\t\t\t\t\tfieldPattern = ef[1]\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (optional) {\n\t\t\t\t// optional modifier requires a different format\n\t\t\t\t// with the slash inside the optional group\n\t\t\t\treturn `(?:/(?<${field}>${fieldPattern}))?`\n\t\t\t} else {\n\t\t\t\treturn `/(?<${field}>${fieldPattern})`\n\t\t\t}\n\t\t})\n\t\t.join('')\n\treturn new RegExp(`^${pattern}\\/?$`)\n}\n",
    "import { type Context } from './context'\nimport { type PineconeRouter } from './router'\n\nexport type Handler = (context: Context) => HandlerResult | void\n\nexport enum HandlerResult {\n\tHALT,\n\tCONTINUE,\n}\n\n/**\n * Execute route handlers sequentially, with cancellation support\n * @param {PineconeRouter} Router - Router instance\n * @param {Handler[]} handlers - Handlers to execute\n * @param {Context} context - Current routing context\n * @returns {Promise<HandlerResult>} - CONTINUE if all handlers completed, HALT otherwise\n */\nexport async function handle(\n\tRouter: PineconeRouter,\n\thandlers: Handler[],\n\tcontext: Context,\n): Promise<HandlerResult> {\n\tRouter.handlersDone = false\n\tRouter.cancelHandlers = false\n\n\tfor (const handler of handlers) {\n\t\tif (Router.cancelHandlers) {\n\t\t\tRouter.cancelHandlers = false\n\t\t\treturn HandlerResult.HALT\n\t\t}\n\n\t\t// Execute handler (with await if async)\n\t\tconst result =\n\t\t\thandler.constructor.name === 'AsyncFunction'\n\t\t\t\t? await handler(context)\n\t\t\t\t: handler(context)\n\n\t\t// Stop execution if handler returned HALT\n\t\tif (result === HandlerResult.HALT) {\n\t\t\treturn HandlerResult.HALT\n\t\t}\n\t}\n\n\tif (!Router.cancelHandlers) {\n\t\tRouter.handlersDone = true\n\t\treturn HandlerResult.CONTINUE\n\t}\n\n\treturn HandlerResult.HALT\n}\n",
    "import { type Route } from './route'\n\nexport const buildContext = (\n\tpath: string,\n\t{\n\t\troute,\n\t\tparams,\n\t\tnavigationIndex,\n\t\tnavigationStack,\n\t}: {\n\t\troute: Route\n\t\tparams: Context['params']\n\t\tnavigationIndex: number\n\t\tnavigationStack: string[]\n\t},\n): Context => ({\n\tpath,\n\troute: route,\n\tparams: params,\n\tnavigationIndex: navigationIndex,\n\tnavigationStack: navigationStack,\n\tquery: window.location.search.substring(1), // query w/out leading '?'\n\thash: window.location.hash.substring(1), // hash without leading '#'\n})\n\nexport declare type Context = {\n\tpath: string\n\troute: Route\n\tparams: Record<string, string | undefined>\n\tquery: string // query without leading '?'\n\thash: string // hash without leading '#'\n\tnavigationIndex: number\n\tnavigationStack: string[]\n}\n",
    "import { type ElementWithXAttributes, type Alpine } from 'alpinejs'\n\nimport { type PineconeRouter } from './router'\nimport { Context } from './context'\n\nconst loadingTemplates: Record<string, Promise<string>> = {}\nconst cachedTemplates: Record<string, string> = {}\nconst inMakeProgress = new Set()\n\nexport const fetchError = (error: string, url: string) => {\n\tdocument.dispatchEvent(\n\t\tnew CustomEvent('pinecone:fetch-error', { detail: { error, url } }),\n\t)\n}\n\nexport const make = (\n\tAlpine: Alpine,\n\ttemplate: ElementWithXAttributes<HTMLTemplateElement>,\n\texpression: string, // the expression on the x-template directive\n\ttargetEl?: HTMLElement,\n\turls?: string[],\n) => {\n\t// having a unique id ensures the same template can be used multiple times inside the same page\n\t// this is for when routes share a template\n\t// with this, adding an id to the template element will make it unique\n\tconst unique_id = template.id + expression\n\n\tif (inMakeProgress.has(unique_id)) return\n\tinMakeProgress.add(unique_id)\n\n\tconst contentNode = template.content\n\n\tif (!contentNode) return\n\n\tconst clones: HTMLElement[] = []\n\n\t// Clone scripts to make them run\n\tcontentNode.querySelectorAll('script').forEach((oldScript) => {\n\t\tconst newScript = document.createElement('script')\n\t\tArray.from(oldScript.attributes).forEach((attr) =>\n\t\t\tnewScript.setAttribute(attr.name, attr.value),\n\t\t)\n\t\tnewScript.textContent = oldScript.textContent\n\t\toldScript.parentNode?.replaceChild(newScript, oldScript)\n\t})\n\n\t// Clone all children and add the x-data scope\n\tArray.from(contentNode.children).forEach((child) => {\n\t\tconst clone = child.cloneNode(true) as ElementWithXAttributes<HTMLElement>\n\t\tclones.push(clone)\n\t\tAlpine.addScopeToNode(clone, {}, template)\n\t\t// TODO: add if proved useful\n\t\t// template.id && clone.setAttribute('template-id', template.id)\n\t})\n\n\tAlpine.mutateDom(() => {\n\t\tif (targetEl != undefined) {\n\t\t\ttargetEl.replaceChildren(...clones)\n\t\t} else template.after(...clones)\n\t\tclones.forEach((clone) => {\n\t\t\tAlpine.initTree(clone)\n\t\t})\n\t})\n\n\ttemplate._x_PineconeRouter_template = clones\n\t// keep track of the currently rendered template urls\n\ttemplate._x_PineconeRouter_templateUrls = urls\n\n\ttemplate._x_PineconeRouter_undoTemplate = () => {\n\t\t// Remove clone element\n\t\tAlpine.mutateDom(() => {\n\t\t\tclones.forEach((clone: ElementWithXAttributes<HTMLElement>) => {\n\t\t\t\tAlpine.destroyTree(clone)\n\t\t\t\tclone.remove()\n\t\t\t})\n\t\t})\n\n\t\tdelete template._x_PineconeRouter_template\n\t}\n\n\tAlpine.nextTick(() => inMakeProgress.delete(unique_id))\n}\n\n// Hide content of a template element\nexport const hide = (template: ElementWithXAttributes<HTMLTemplateElement>) => {\n\tif (template._x_PineconeRouter_undoTemplate) {\n\t\ttemplate._x_PineconeRouter_undoTemplate()\n\t\tdelete template._x_PineconeRouter_undoTemplate\n\t}\n}\n\nexport const show = (\n\tAlpine: Alpine,\n\tRouter: PineconeRouter,\n\ttemplate: ElementWithXAttributes<HTMLTemplateElement>,\n\texpression: string,\n\turls?: Array<string>,\n\ttargetEl?: HTMLElement,\n): void => {\n\t// if the template is rendered but the template url parameters have changed\n\t// remove the content inside the template\n\tif (\n\t\ttemplate._x_PineconeRouter_templateUrls != undefined &&\n\t\ttemplate._x_PineconeRouter_templateUrls != urls\n\t) {\n\t\thide(template)\n\t\ttemplate.innerHTML = ''\n\t}\n\n\t// the template is already inserted into the page\n\t// leave it as is and end loading\n\tif (template._x_PineconeRouter_template) {\n\t\tRouter.endLoading()\n\t\treturn\n\t}\n\n\tif (template.content.childElementCount) {\n\t\tmake(Alpine, template, expression, targetEl, urls)\n\t\tRouter.endLoading()\n\t} else if (urls) {\n\t\t// If templates are not loaded, load them\n\n\t\tload(urls, template)\n\t\t\t.then(() => make(Alpine, template, expression, targetEl, urls))\n\t\t\t.finally(() => Router.endLoading())\n\t}\n}\n\nexport const interpolate = (\n\turls: string[],\n\tparams: Context['params'],\n): string[] => {\n\treturn urls.map((url) => {\n\t\t// Replace :param format (e.g., /users/:id/profile.html)\n\t\treturn url.replace(/:([^/.]+)/g, (_, paramName) => {\n\t\t\treturn params[paramName] || paramName\n\t\t})\n\t})\n}\n\n// Load a template from a url and put its content into cachedTemplates\nconst loadUrl = async (url: string): Promise<string> => {\n\t// if the url is already being loaded, return the promise\n\tif (loadingTemplates.hasOwnProperty(url)) {\n\t\treturn loadingTemplates[url]\n\t} else if (cachedTemplates[url]) {\n\t\treturn cachedTemplates[url]\n\t} else {\n\t\t// if the url is neither loading nor cached, start loading\n\t\tloadingTemplates[url] = fetch(url)\n\t\t\t.then((r) => {\n\t\t\t\tif (!r.ok) {\n\t\t\t\t\tfetchError(r.statusText, url)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn r.text()\n\t\t\t})\n\t\t\t.then((html) => {\n\t\t\t\tif (!html) return ''\n\t\t\t\tcachedTemplates[url] = html\n\t\t\t\tdelete loadingTemplates[url]\n\t\t\t\treturn html\n\t\t\t})\n\t\treturn loadingTemplates[url]\n\t}\n}\n\n// Preload templates from urls\nexport const preload = (urls: string[]): void => {\n\turls.forEach(loadUrl)\n}\n\n/**\n * Load templates from urls into an element\n * @param urls array of urls to load\n * @param el target element where to put the content of the urls\n * @returns Promise<string> the new innerHTML of the target element\n */\nexport const load = (\n\turls: string[],\n\tel: HTMLTemplateElement | HTMLElement,\n): Promise<string> => {\n\treturn Promise.all(urls.map(loadUrl)).then((htmlArray) => {\n\t\tel.innerHTML = htmlArray.join('')\n\t\treturn el.innerHTML\n\t})\n}\n",
    "/**\n * Centralized error messages for Pinecone Router\n */\n\nexport const INVALID_TEMPLATE_TYPE = (type: string) =>\n\t\t`Invalid template type: ${type}. Expected an array of strings.`,\n\tTARGET_ID_NOT_FOUND = (id: string) =>\n\t\t`Can't find an element with the supplied target ID: ${id}`,\n\tROUTE_EXISTS = (path: string) => `Route already exists: ${path}`,\n\tMISSING_TEMPLATE_TARGET = 'No target specified for template rendering',\n\tDIRECTIVE_REQUIRES_TEMPLATE_ELEMENT =\n\t\t'Directives can only be used on template elements.',\n\tDIRECTIVE_REQUIRES_ROUTE = (directive: string) =>\n\t\t`x-${directive} must be used on the same element as x-route.`,\n\tTEMPLATE_WITH_CHILD =\n\t\t'x-template cannot be used alongside an inline template (template element should not have a child).',\n\tTARGET_ID_NOT_SPECIFIED =\n\t\t'templateTargetId must be specified for programmatically added templates.',\n\tINVALID_HANDLER_TYPE = (type: string) => `Invalid handler type: ${type}.`,\n\tROUTE_NOT_FOUND = (path: string) => `Path: ${path} was not found.`,\n\tTEMPLATE_PARAM_NOT_FOUND = (param: string, url: string) =>\n\t\t`The param ${param} in the template url ${url} does not exist.` as const\n\n// Custom error class for Pinecone Router\nexport class PineconeRouterError extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message)\n\t\tthis.name = 'PineconeRouterError'\n\t\tObject.setPrototypeOf(this, PineconeRouterError.prototype)\n\t}\n}\n",
    "import { TARGET_ID_NOT_FOUND, PineconeRouterError } from './errors'\nimport { type Route } from './route'\n\nexport const findRouteIndex = (path: string, routes: Route[]) =>\n\troutes.findIndex((r) => r.path == path)\n\nexport const modifierValue = (\n\tmodifiers: string[],\n\tkey: string,\n\tfallback?: string,\n): string | undefined => {\n\t// If the modifier isn't present, use the default.\n\tif (modifiers.indexOf(key) === -1) return fallback\n\n\t// If it IS present, grab the value after it\n\tconst rawValue = modifiers[modifiers.indexOf(key) + 1]\n\n\tif (!rawValue) return fallback\n\n\tif (key === 'target') {\n\t\tlet match = rawValue.match(/([a-z0-9_-]+)/)\n\t\tif (match) return match[1]\n\t}\n\treturn rawValue\n}\n\nexport const addBasePath = (path: string, basePath: string) => {\n\tif (basePath != '/' && !path.startsWith(basePath)) {\n\t\tpath = basePath + path\n\t}\n\tif (path == basePath && !path.endsWith('/')) {\n\t\tpath += '/'\n\t}\n\treturn path\n}\n\nexport const getTargetELement = (\n\ttargetId?: string,\n\tglobalTargetId?: string,\n): HTMLElement | undefined => {\n\tlet target = targetId ?? globalTargetId ?? ''\n\tlet targetEl = document.getElementById(target) ?? undefined\n\n\tif (target.length && targetEl == undefined)\n\t\tthrow new PineconeRouterError(TARGET_ID_NOT_FOUND(target))\n\n\treturn targetEl\n}\n\nexport const normalizeExpression = (expression: string): string => {\n\t// check if the handlers expression is an array\n\t// if not make it one\n\tif (\n\t\t!(expression.startsWith('[') && expression.endsWith(']')) &&\n\t\t!(expression.startsWith('Array(') && expression.endsWith(')'))\n\t) {\n\t\texpression = `[${expression}]`\n\t}\n\treturn expression\n}\n",
    "import createRoute, { type Route, type RouteOptions } from './route'\nimport { handle, HandlerResult, type Handler } from './handler'\nimport { buildContext, type Context } from './context'\nimport { load, preload } from './templates'\nimport { addBasePath } from './utils'\nimport {\n\tTARGET_ID_NOT_SPECIFIED,\n\tPineconeRouterError,\n\tROUTE_NOT_FOUND,\n\tROUTE_EXISTS,\n} from './errors'\n\nexport type Settings = {\n\t/**\n\t * @default false\n\t * @summary enable hash routing\n\t */\n\thash: boolean\n\t/**\n\t * @default `/`\n\t * @summary The base path of the site, for example /blog\n\t * Note: do not use with using hash routing!\n\t */\n\tbasePath: string\n\t/**\n\t * @default undefined\n\t * @summmary Set an optional ID for where the templates will render by default\n\t * This can be overriden by the .target modifier\n\t */\n\ttemplateTargetId?: string\n\t/**\n\t * @default true\n\t * @summary Set to false if you don't want to intercept links by default.\n\t */\n\tinterceptLinks: boolean\n\t/**\n\t * @default false\n\t * @summary Set to true to always send loading events, even if the template is inline and there are no handlers.\n\t */\n\talwaysSendLoadingEvents: boolean\n}\n\nexport interface PineconeRouter {\n\tversion: string\n\tname: string\n\tnotfound: Route\n\troutes: Route[]\n\tglobalHandlers: Handler[]\n\tcancelHandlers: boolean\n\thandlersDone: boolean\n\n\tcontext: Context\n\tsettings: Settings\n\n\tloadStart: Event\n\tloadEnd: Event\n\n\tloading: boolean\n\n\t// Methods\n\t/**\n\t * Dispatch the loadStart event\n\t */\n\tstartLoading: () => void\n\t/**\n\t * Dispatch the loadEnd event\n\t */\n\tendLoading: () => void\n\t/**\n\t * Add a new route\n\t *\n\t * @param {string} path the path to match\n\t * @param {RouteOptions} options the options for the route\n\t * @returns {number} the index of the route in the routes array\n\t */\n\tadd: (path: string, options: RouteOptions) => number\n\t/**\n\t * Remove a route\n\t *\n\t * @param {string} path the route to remove\n\t */\n\tremove: (path: string) => void\n\t/**\n\t * Redirect to a specified path\n\t * This prevent the execution of subsequent handlers if returned inside a handler.\n\t *\n\t * @param {string} path - The path to navigate to\n\t * @returns {HandlerResult.HALT} HandlerResult.HALT\n\t */\n\tredirect: (path: string) => HandlerResult.HALT\n\t/**\n\t * Check if the router can navigate backward\n\t * @returns {boolean} true if the router can go back\n\t */\n\tcanGoBack: () => boolean\n\t/**\n\t * Go back to the previous route in the navigation stack\n\t */\n\tback: () => void\n\t/**\n\t * Check if the router can navigate forward\n\t *\n\t * @returns {boolean} true if the router can go forward\n\t */\n\tcanGoForward: () => boolean\n\t/**\n\t * Go to the next route in the navigation stack\n\t */\n\tforward: () => void\n\t/**\n\t *  Navigate to the specified path\n\t *\n\t * @param {string} path the path with no hash even if using hash routing\n\t * @param {boolean} fromPopState this will be set to true if called from window.onpopstate event\n\t * @param {boolean} firstLoad this will be set to true if this is the first page loaded, also from page reload\n\t * @param {number} navigationIndex the index of the navigation stack to go to\n\t */\n\tnavigate: (\n\t\tpath: string,\n\t\tfromPopState?: boolean,\n\t\tfirstLoad?: boolean,\n\t\tnavigationIndex?: number,\n\t) => Promise<void>\n}\n\nexport const createPineconeRouter = (version: string): PineconeRouter => {\n\tconst notfound = createRoute('notfound', {\n\t\thandlers: [\n\t\t\t(ctx) =>\n\t\t\t\tconsole.error(new PineconeRouterError(ROUTE_NOT_FOUND(ctx.path))),\n\t\t],\n\t})\n\n\tconst context = buildContext('', {\n\t\troute: notfound,\n\t\tparams: {},\n\t\tnavigationStack: [],\n\t\tnavigationIndex: 0,\n\t})\n\n\tconst router: PineconeRouter = {\n\t\tversion,\n\t\tname: 'pinecone-router',\n\t\tnotfound: notfound,\n\t\troutes: [],\n\t\tglobalHandlers: [],\n\t\tcancelHandlers: false,\n\t\thandlersDone: false,\n\n\t\tcontext,\n\n\t\tsettings: {\n\t\t\thash: false,\n\t\t\tbasePath: '/',\n\t\t\ttemplateTargetId: undefined,\n\t\t\tinterceptLinks: true,\n\t\t\talwaysSendLoadingEvents: false,\n\t\t},\n\n\t\tloadStart: new Event('pinecone:start'),\n\t\tloadEnd: new Event('pinecone:end'),\n\n\t\tloading: false,\n\n\t\tstartLoading: function (): void {\n\t\t\tif (!this.loading) {\n\t\t\t\tdocument.dispatchEvent(this.loadStart)\n\t\t\t\tthis.loading = true\n\t\t\t}\n\t\t},\n\n\t\tendLoading: function (): void {\n\t\t\tif (this.loading) {\n\t\t\t\tdocument.dispatchEvent(this.loadEnd)\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\n\t\tadd: function (path: string, options: RouteOptions): number {\n\t\t\t// check if the route was registered on the same router.\n\t\t\tif (this.routes.find((r: Route) => r.path == path) != null) {\n\t\t\t\tthrow new PineconeRouterError(ROUTE_EXISTS(path))\n\t\t\t}\n\t\t\tif (options.templates && options.preload) {\n\t\t\t\tpreload(options.templates)\n\t\t\t}\n\t\t\treturn this.routes.push(createRoute(path, options)) - 1\n\t\t},\n\n\t\tremove: function (path: string): void {\n\t\t\tconst i = this.routes.findIndex((r: Route) => r.path == path)\n\t\t\tdelete this.routes[i]\n\t\t},\n\n\t\tredirect: function (path: string): HandlerResult.HALT {\n\t\t\tthis.navigate(path)\n\t\t\treturn HandlerResult.HALT\n\t\t},\n\n\t\tcanGoBack: function (): boolean {\n\t\t\treturn this.context.navigationIndex > 0\n\t\t},\n\n\t\tback: function (): void {\n\t\t\tthis.navigate(\n\t\t\t\tthis.context.navigationStack[this.context.navigationIndex - 1],\n\t\t\t\tfalse,\n\t\t\t\tfalse,\n\t\t\t\tthis.context.navigationIndex - 1,\n\t\t\t)\n\t\t},\n\n\t\tcanGoForward: function (): boolean {\n\t\t\treturn (\n\t\t\t\tthis.context.navigationIndex < this.context.navigationStack.length - 1\n\t\t\t)\n\t\t},\n\n\t\tforward: function (): void {\n\t\t\tthis.navigate(\n\t\t\t\tthis.context.navigationStack[this.context.navigationIndex + 1],\n\t\t\t\tfalse,\n\t\t\t\tfalse,\n\t\t\t\tthis.context.navigationIndex + 1,\n\t\t\t)\n\t\t},\n\n\t\tnavigate: async function (\n\t\t\tpath: string,\n\t\t\tfromPopState: boolean = false,\n\t\t\tfirstLoad: boolean = false,\n\t\t\tnavigationIndex?: number,\n\t\t): Promise<void> {\n\t\t\t// if a navigation request was made before previous route handlers were done, cancel them\n\t\t\t// this include link clicks, back/forward, etc\n\t\t\tif (!this.handlersDone) {\n\t\t\t\tthis.cancelHandlers = true\n\t\t\t}\n\n\t\t\tif (!path) path = '/'\n\n\t\t\t// if specified add the basePath\n\t\t\t// TODO\n\t\t\tpath = addBasePath(path, this.settings.basePath)\n\t\t\t// console.debug({ path })\n\n\t\t\t// create a new local context\n\t\t\t// this is to prevent editing the global context\n\t\t\t// which trigger Alpine effects\n\t\t\t// which causes them to run before this function has done its work.\n\t\t\tconst context = buildContext(path, { ...this.context })\n\n\t\t\tconst route: Route =\n\t\t\t\tthis.routes.find((route: Route) => {\n\t\t\t\t\tconst r = route.match(path)\n\t\t\t\t\tif (r.params) context.params = r.params\n\t\t\t\t\treturn r.match\n\t\t\t\t}) ?? this.notfound\n\n\t\t\tcontext.route = route\n\n\t\t\t// if alwaysSendLoadingEvents is true\n\t\t\t// or there are handlers or templates to render and the path changed (not soft reload)\n\t\t\t// then dispatch the loading start event\n\t\t\tif (\n\t\t\t\tthis.settings.alwaysSendLoadingEvents ||\n\t\t\t\t((route.handlers.length ||\n\t\t\t\t\tthis.globalHandlers.length ||\n\t\t\t\t\troute.templates.length) &&\n\t\t\t\t\tthis.context.path != path)\n\t\t\t) {\n\t\t\t\tthis.startLoading()\n\t\t\t}\n\n\t\t\t// do not call pushstate from popstate event https://stackoverflow.com/a/50830905\n\t\t\tif (!fromPopState) {\n\t\t\t\t// build the full path based on settings\n\t\t\t\tconst fullPath = this.settings.hash\n\t\t\t\t\t? '#' + path\n\t\t\t\t\t: path + window.location.hash\n\n\t\t\t\t// handle history state management\n\t\t\t\tif (!firstLoad) {\n\t\t\t\t\thistory.pushState({ path: fullPath }, '', fullPath)\n\t\t\t\t} else if (this.settings.hash && path === '/') {\n\t\t\t\t\t// special case: first load with hash routing and root path\n\t\t\t\t\treturn this.navigate('/', false, false)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (route.handlers.length || this.globalHandlers.length) {\n\t\t\t\tconst ok = await handle(\n\t\t\t\t\tthis,\n\t\t\t\t\tthis.globalHandlers.concat(route.handlers),\n\t\t\t\t\tcontext,\n\t\t\t\t)\n\n\t\t\t\t// if a handler halted execution, for example through returning PineconeRouter.redirect(),\n\t\t\t\t//  return without displaying a template\n\t\t\t\tif (ok == HandlerResult.HALT) {\n\t\t\t\t\tthis.endLoading()\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (!route.templates) {\n\t\t\t\t\tthis.endLoading()\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.handlersDone = true\n\t\t\t}\n\n\t\t\t// if called from this.back() or .forward(), do not add the path to the stack\n\t\t\tif (navigationIndex != null) {\n\t\t\t\tcontext.navigationIndex = navigationIndex\n\t\t\t} else if (path != this.context.path) {\n\t\t\t\t// Only update stack if navigating to a different path\n\t\t\t\tif (context.navigationIndex < context.navigationStack.length - 1) {\n\t\t\t\t\t// Trim navigation stack if we're not at the end\n\t\t\t\t\tcontext.navigationStack = context.navigationStack.slice(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tcontext.navigationIndex + 1,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t// Add current path and update index\n\t\t\t\tcontext.navigationStack.push(path)\n\t\t\t\tcontext.navigationIndex = context.navigationStack.length - 1\n\t\t\t}\n\n\t\t\tthis.context = context\n\n\t\t\tconst dispatch = (name: string) =>\n\t\t\t\tdocument.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(`pinecone:${name}`, {\n\t\t\t\t\t\tdetail: { context },\n\t\t\t\t\t}),\n\t\t\t\t)\n\n\t\t\tdispatch('navigate')\n\t\t\tif (this.context.route.path === route.path) {\n\t\t\t\t// if the route is the same, but the path has changed (ie. param change)\n\t\t\t\tif (this.context.path != context.path) dispatch('update')\n\t\t\t\telse dispatch('refresh')\n\t\t\t} else dispatch('change')\n\n\t\t\t// show templates added programmatically\n\t\t\tif (route.programmaticTemplates) {\n\t\t\t\tlet target = document.getElementById(\n\t\t\t\t\troute.templateTargetId ?? this.settings.templateTargetId,\n\t\t\t\t)\n\n\t\t\t\tif (!target) throw new PineconeRouterError(TARGET_ID_NOT_SPECIFIED)\n\n\t\t\t\tload(route.templates, target).finally(() => this.endLoading())\n\t\t\t}\n\n\t\t\tif (this.settings.alwaysSendLoadingEvents) this.endLoading()\n\t\t},\n\t}\n\n\treturn router\n}\n",
    "import { type ElementWithXAttributes, type Alpine } from 'alpinejs'\n\nimport { getTargetELement, findRouteIndex, modifierValue } from '../utils'\nimport { hide, interpolate, load, show } from '../templates'\nimport { PineconeRouter } from '../router'\nimport {\n\tDIRECTIVE_REQUIRES_TEMPLATE_ELEMENT,\n\tINVALID_TEMPLATE_TYPE,\n\tTEMPLATE_WITH_CHILD,\n\tPineconeRouterError,\n\tDIRECTIVE_REQUIRES_ROUTE,\n} from '../errors'\n\nexport const TemplateDirective = (Alpine: Alpine, Router: PineconeRouter) => {\n\tAlpine.directive(\n\t\t'template',\n\t\t(\n\t\t\tel: ElementWithXAttributes,\n\t\t\t{ expression, modifiers },\n\t\t\t{ evaluate, cleanup, Alpine, effect },\n\t\t) => {\n\t\t\tif (!(el instanceof HTMLTemplateElement)) {\n\t\t\t\tthrow new PineconeRouterError(DIRECTIVE_REQUIRES_TEMPLATE_ELEMENT)\n\t\t\t}\n\n\t\t\tconst template = el as ElementWithXAttributes<HTMLTemplateElement>\n\n\t\t\tif (template.content.firstElementChild != null)\n\t\t\t\tthrow new PineconeRouterError(TEMPLATE_WITH_CHILD)\n\n\t\t\texpression = expression.trim()\n\t\t\tif (\n\t\t\t\t!(expression.startsWith('[') && expression.endsWith(']')) &&\n\t\t\t\t!(expression.startsWith('Array') && expression.endsWith(')'))\n\t\t\t) {\n\t\t\t\texpression = `['${expression}']`\n\t\t\t}\n\n\t\t\tconst evaluatedExpression = evaluate(expression)\n\n\t\t\tlet urls: string[]\n\n\t\t\tif (\n\t\t\t\ttypeof evaluatedExpression == 'object' &&\n\t\t\t\tArray.isArray(evaluatedExpression)\n\t\t\t)\n\t\t\t\turls = evaluatedExpression\n\t\t\telse {\n\t\t\t\tthrow new PineconeRouterError(\n\t\t\t\t\tINVALID_TEMPLATE_TYPE(typeof evaluatedExpression),\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst targetEl = getTargetELement(\n\t\t\t\tmodifierValue(modifiers, 'target'),\n\t\t\t\tRouter.settings.templateTargetId,\n\t\t\t)\n\n\t\t\tif (modifiers.includes('preload')) {\n\t\t\t\tload(urls, template)\n\t\t\t}\n\n\t\t\tif (template._x_PineconeRouter_route == undefined) {\n\t\t\t\tthrow new PineconeRouterError(DIRECTIVE_REQUIRES_ROUTE('template'))\n\t\t\t}\n\n\t\t\t// add template to the route\n\t\t\tconst path = template._x_PineconeRouter_route\n\n\t\t\tconst route =\n\t\t\t\tpath == 'notfound'\n\t\t\t\t\t? Router.notfound\n\t\t\t\t\t: Router.routes[findRouteIndex(path, Router.routes)]\n\n\t\t\troute.templates = urls\n\n\t\t\tconst callback = () => {\n\t\t\t\tconst found = Router.handlersDone && Router.context.route == route\n\t\t\t\tif (found) {\n\t\t\t\t\tif (modifiers.includes('interpolate')) {\n\t\t\t\t\t\turls = interpolate(route.templates, Router.context.params)\n\t\t\t\t\t}\n\t\t\t\t\tshow(Alpine, Router, template, expression, urls, targetEl)\n\t\t\t\t} else hide(template)\n\t\t\t}\n\n\t\t\tAlpine.nextTick(() => effect(callback))\n\n\t\t\tcleanup(() => {\n\t\t\t\ttemplate._x_PineconeRouter_undoTemplate &&\n\t\t\t\t\ttemplate._x_PineconeRouter_undoTemplate()\n\t\t\t})\n\t\t},\n\t)\n}\n",
    "import { type Alpine, type ElementWithXAttributes } from 'alpinejs'\nimport { PineconeRouter } from '../router'\nimport { findRouteIndex } from '../utils'\nimport {\n\tDIRECTIVE_REQUIRES_ROUTE,\n\tINVALID_HANDLER_TYPE,\n\tPineconeRouterError,\n} from '../errors'\n\nimport { type Route } from '../route'\nimport type { Handler } from '../handler'\n\nexport const HandlerDirective = (Alpine: Alpine, Router: PineconeRouter) => {\n\tAlpine.directive(\n\t\t'handler',\n\t\t(\n\t\t\tel: ElementWithXAttributes,\n\t\t\t{ expression, modifiers },\n\t\t\t{ evaluate, cleanup },\n\t\t) => {\n\t\t\t// check if the handlers expression is an array\n\t\t\t// if not make it one\n\t\t\texpression = expression.trim()\n\t\t\tif (\n\t\t\t\t!(expression.startsWith('[') && expression.endsWith(']')) &&\n\t\t\t\t!(expression.startsWith('Array') && expression.endsWith(')'))\n\t\t\t) {\n\t\t\t\texpression = `[${expression}]`\n\t\t\t}\n\n\t\t\tconst evaluatedExpression = evaluate(expression)\n\n\t\t\tif (typeof evaluatedExpression != 'object')\n\t\t\t\tthrow new PineconeRouterError(\n\t\t\t\t\tINVALID_HANDLER_TYPE(typeof evaluatedExpression),\n\t\t\t\t)\n\n\t\t\tlet handlers = evaluatedExpression as Handler[]\n\n\t\t\t// add `this` context for handlers inside an Alpine.component\n\t\t\tfor (let i = 0; i < handlers.length; i++) {\n\t\t\t\thandlers[i] = handlers[i].bind(Alpine.$data(el))\n\t\t\t}\n\n\t\t\tlet route: Route\n\n\t\t\tif (modifiers.includes('global')) {\n\t\t\t\tRouter.globalHandlers = handlers\n\t\t\t} else {\n\t\t\t\tif (!el._x_PineconeRouter_route)\n\t\t\t\t\tthrow new PineconeRouterError(DIRECTIVE_REQUIRES_ROUTE('handler'))\n\n\t\t\t\t// add handlers to the route\n\t\t\t\tlet path = el._x_PineconeRouter_route\n\t\t\t\troute =\n\t\t\t\t\tpath == 'notfound'\n\t\t\t\t\t\t? Router.notfound\n\t\t\t\t\t\t: Router.routes[findRouteIndex(path, Router.routes)]\n\n\t\t\t\troute.handlers = handlers\n\t\t\t}\n\n\t\t\tcleanup(() => {\n\t\t\t\tif (modifiers.includes('global')) {\n\t\t\t\t\tRouter.globalHandlers = []\n\t\t\t\t} else {\n\t\t\t\t\troute.handlers = []\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t).before('template')\n}\n",
    "import { type ElementWithXAttributes, type Alpine } from 'alpinejs'\n\nimport { getTargetELement, modifierValue, addBasePath } from '../utils'\nimport { PineconeRouter } from '../router'\nimport { show, hide } from '../templates'\nimport {\n\tDIRECTIVE_REQUIRES_TEMPLATE_ELEMENT,\n\tPineconeRouterError,\n} from '../errors'\n\nexport const RouteDirective = (Alpine: Alpine, Router: PineconeRouter) => {\n\tAlpine.directive(\n\t\t'route',\n\t\t(\n\t\t\tel: ElementWithXAttributes,\n\t\t\t{ expression, modifiers },\n\t\t\t{ cleanup, effect },\n\t\t) => {\n\t\t\tlet path = expression\n\n\t\t\tif (!(el instanceof HTMLTemplateElement)) {\n\t\t\t\tthrow new PineconeRouterError(DIRECTIVE_REQUIRES_TEMPLATE_ELEMENT)\n\t\t\t}\n\n\t\t\tconst template = el as ElementWithXAttributes<HTMLTemplateElement>\n\n\t\t\tconst targetEl = getTargetELement(\n\t\t\t\tmodifierValue(modifiers, 'target'),\n\t\t\t\tRouter.settings.templateTargetId,\n\t\t\t)\n\n\t\t\tlet routeIndex: number | undefined\n\n\t\t\tif (path != 'notfound') {\n\t\t\t\t// if specified add the basePath\n\t\t\t\tpath = addBasePath(path, Router.settings.basePath)\n\t\t\t\t// register the new route if possible\n\t\t\t\trouteIndex = Router.add(path, {})\n\t\t\t}\n\n\t\t\tconst route =\n\t\t\t\trouteIndex != undefined ? Router.routes[routeIndex] : Router.notfound\n\n\t\t\t// set the path in the element so it is used by other directives\n\t\t\ttemplate._x_PineconeRouter_route = path\n\n\t\t\tif (template.content.childElementCount) {\n\t\t\t\tAlpine.nextTick(() => {\n\t\t\t\t\teffect(() => {\n\t\t\t\t\t\tconst found = Router.handlersDone && Router.context.route == route\n\n\t\t\t\t\t\tfound\n\t\t\t\t\t\t\t? show(Alpine, Router, template, expression, undefined, targetEl)\n\t\t\t\t\t\t\t: hide(template)\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tcleanup(() => {\n\t\t\t\ttemplate._x_PineconeRouter_undoTemplate &&\n\t\t\t\t\ttemplate._x_PineconeRouter_undoTemplate()\n\t\t\t\tif (routeIndex != undefined) {\n\t\t\t\t\tdelete Router.routes[routeIndex]\n\t\t\t\t}\n\t\t\t\tdelete template._x_PineconeRouter_route\n\t\t\t})\n\t\t},\n\t).before('handler')\n}\n",
    "import { type PineconeRouter } from './router'\n\n/**\n * @description Add a handler to click events on all valid links\n */\nexport const interceptLinks = (Router: PineconeRouter) => {\n\tfunction validateLink(node: HTMLAnchorElement): string | undefined {\n\t\t// only valid elements\n\t\tif (!node || !node.getAttribute) return\n\n\t\tlet href = node.getAttribute('href')!,\n\t\t\ttarget = node.getAttribute('target')\n\n\t\t// ignore links with targets and non-path URLs\n\t\tif (!href || !href.match(/^\\//g) || (target && !target.match(/^_?self$/i)))\n\t\t\treturn\n\n\t\treturn href\n\t}\n\n\twindow.document.body.addEventListener('click', function (e: MouseEvent) {\n\t\tif (\n\t\t\te.ctrlKey ||\n\t\t\te.metaKey ||\n\t\t\te.altKey ||\n\t\t\te.shiftKey ||\n\t\t\te.button ||\n\t\t\te.defaultPrevented\n\t\t)\n\t\t\treturn\n\n\t\tlet node = e.target as HTMLElement\n\n\t\tdo {\n\t\t\tif (node instanceof HTMLAnchorElement && node.getAttribute('href')) {\n\t\t\t\tif (\n\t\t\t\t\tRouter.settings.interceptLinks == false &&\n\t\t\t\t\t!node.hasAttribute('x-link')\n\t\t\t\t)\n\t\t\t\t\treturn\n\t\t\t\tif (node.hasAttribute('data-native') || node.hasAttribute('native'))\n\t\t\t\t\treturn\n\t\t\t\tlet href = validateLink(node)\n\t\t\t\tif (href) {\n\t\t\t\t\tRouter.navigate(href)\n\t\t\t\t\tif (e.stopImmediatePropagation) e.stopImmediatePropagation()\n\t\t\t\t\tif (e.stopPropagation) e.stopPropagation()\n\t\t\t\t\te.preventDefault()\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t} while ((node = node.parentNode as HTMLElement))\n\t})\n}\n",
    "import { type PluginCallback, type Alpine } from 'alpinejs'\n\nimport { createPineconeRouter, type PineconeRouter } from './router'\nimport { TemplateDirective } from './directives/x-template'\nimport { HandlerDirective } from './directives/x-handler'\nimport { RouteDirective } from './directives/x-route'\nimport { interceptLinks } from './links'\nimport { type Context } from './context'\n\ndeclare global {\n\tinterface Window {\n\t\tPineconeRouter: PineconeRouter\n\t\tAlpine: Alpine\n\t}\n}\n\ndeclare module 'alpinejs' {\n\tinterface XAttributes {\n\t\t_x_PineconeRouter_templateUrls: string[]\n\t\t_x_PineconeRouter_template: HTMLElement[]\n\t\t_x_PineconeRouter_scripts: HTMLScriptElement[]\n\t\t_x_PineconeRouter_undoTemplate: () => void\n\t\t_x_PineconeRouter_route: string\n\t}\n\tinterface Alpine {\n\t\t$router: PineconeRouter\n\t\t$params: Context['params']\n\t}\n\tinterface Magics<T> {\n\t\t$router: PineconeRouter\n\t\t$params: Context['params']\n\t}\n}\n\nconst PineconeRouterPlugin: PluginCallback = function (Alpine: Alpine) {\n\tconst Router = Alpine.reactive(createPineconeRouter('7.0.0'))\n\twindow.PineconeRouter = Router\n\n\t// Initialize event listeners (equivalent to constructor)\n\tdocument.addEventListener('alpine:initialized', () => {\n\t\t// virtually navigate to the path on the first page load\n\t\t// this will register the path in history and sets the path variable\n\t\tif (Router.settings.hash == false) {\n\t\t\tRouter.navigate(location.pathname + location.search, false, true)\n\t\t} else {\n\t\t\tRouter.navigate(location.hash.substring(1), false, true)\n\t\t}\n\t})\n\n\t// handle navigation events not emitted by links, for example, back button.\n\twindow.addEventListener('popstate', () => {\n\t\tif (Router.settings.hash) {\n\t\t\tif (window.location.hash != '') {\n\t\t\t\tRouter.navigate(window.location.hash.substring(1), true)\n\t\t\t}\n\t\t} else {\n\t\t\tRouter.navigate(window.location.pathname, true)\n\t\t}\n\t})\n\n\tTemplateDirective(Alpine, Router)\n\tHandlerDirective(Alpine, Router)\n\tRouteDirective(Alpine, Router)\n\n\tAlpine.$router = Router\n\tAlpine.$params = Router.context.params\n\tAlpine.magic('router', () => Router)\n\tAlpine.magic('params', () => Router.context.params)\n\n\t// intercept click event in links\n\tinterceptLinks(Router)\n}\n\nexport default PineconeRouterPlugin\n"
  ],
  "mappings": "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",
  "debugId": "7537C9264DE3E80464756E2164756E21",
  "names": []
}