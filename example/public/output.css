/*! tailwindcss v4.0.15 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
	:root,
	:host {
		--font-sans:
			ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
			'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
		--font-mono:
			ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',
			'Courier New', monospace;
		--color-gray-300: oklch(0.872 0.01 258.338);
		--color-white: #fff;
		--spacing: 0.25rem;
		--container-sm: 24rem;
		--text-sm: 0.875rem;
		--text-sm--line-height: calc(1.25 / 0.875);
		--text-lg: 1.125rem;
		--text-lg--line-height: calc(1.75 / 1.125);
		--font-weight-bold: 700;
		--tracking-tighter: -0.05em;
		--radius-3xl: 1.5rem;
		--default-font-family: var(--font-sans);
		--default-mono-font-family: var(--font-mono);
		--color-brand: #0b2822;
		--color-secondary-1: #d7f4ee;
		--color-secondary-2: #5fd3bc;
	}
}
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
		border: 0 solid;
	}
	html,
	:host {
		line-height: 1.5;
		-webkit-text-size-adjust: 100%;
		tab-size: 4;
		font-family: var(
			--default-font-family,
			ui-sans-serif,
			system-ui,
			sans-serif,
			'Apple Color Emoji',
			'Segoe UI Emoji',
			'Segoe UI Symbol',
			'Noto Color Emoji'
		);
		font-feature-settings: var(--default-font-feature-settings, normal);
		font-variation-settings: var(--default-font-variation-settings, normal);
		-webkit-tap-highlight-color: transparent;
	}
	hr {
		height: 0;
		color: inherit;
		border-top-width: 1px;
	}
	abbr:where([title]) {
		-webkit-text-decoration: underline dotted;
		text-decoration: underline dotted;
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-size: inherit;
		font-weight: inherit;
	}
	a {
		color: inherit;
		-webkit-text-decoration: inherit;
		text-decoration: inherit;
	}
	b,
	strong {
		font-weight: bolder;
	}
	code,
	kbd,
	samp,
	pre {
		font-family: var(
			--default-mono-font-family,
			ui-monospace,
			SFMono-Regular,
			Menlo,
			Monaco,
			Consolas,
			'Liberation Mono',
			'Courier New',
			monospace
		);
		font-feature-settings: var(--default-mono-font-feature-settings, normal);
		font-variation-settings: var(
			--default-mono-font-variation-settings,
			normal
		);
		font-size: 1em;
	}
	small {
		font-size: 80%;
	}
	sub,
	sup {
		font-size: 75%;
		line-height: 0;
		position: relative;
		vertical-align: baseline;
	}
	sub {
		bottom: -0.25em;
	}
	sup {
		top: -0.5em;
	}
	table {
		text-indent: 0;
		border-color: inherit;
		border-collapse: collapse;
	}
	:-moz-focusring {
		outline: auto;
	}
	progress {
		vertical-align: baseline;
	}
	summary {
		display: list-item;
	}
	ol,
	ul,
	menu {
		list-style: none;
	}
	img,
	svg,
	video,
	canvas,
	audio,
	iframe,
	embed,
	object {
		display: block;
		vertical-align: middle;
	}
	img,
	video {
		max-width: 100%;
		height: auto;
	}
	button,
	input,
	select,
	optgroup,
	textarea,
	::file-selector-button {
		font: inherit;
		font-feature-settings: inherit;
		font-variation-settings: inherit;
		letter-spacing: inherit;
		color: inherit;
		border-radius: 0;
		background-color: transparent;
		opacity: 1;
	}
	:where(select:is([multiple], [size])) optgroup {
		font-weight: bolder;
	}
	:where(select:is([multiple], [size])) optgroup option {
		padding-inline-start: 20px;
	}
	::file-selector-button {
		margin-inline-end: 4px;
	}
	::placeholder {
		opacity: 1;
	}
	@supports (not (-webkit-appearance: -apple-pay-button)) or
		(contain-intrinsic-size: 1px) {
		::placeholder {
			color: color-mix(in oklab, currentColor 50%, transparent);
		}
	}
	textarea {
		resize: vertical;
	}
	::-webkit-search-decoration {
		-webkit-appearance: none;
	}
	::-webkit-date-and-time-value {
		min-height: 1lh;
		text-align: inherit;
	}
	::-webkit-datetime-edit {
		display: inline-flex;
	}
	::-webkit-datetime-edit-fields-wrapper {
		padding: 0;
	}
	::-webkit-datetime-edit,
	::-webkit-datetime-edit-year-field,
	::-webkit-datetime-edit-month-field,
	::-webkit-datetime-edit-day-field,
	::-webkit-datetime-edit-hour-field,
	::-webkit-datetime-edit-minute-field,
	::-webkit-datetime-edit-second-field,
	::-webkit-datetime-edit-millisecond-field,
	::-webkit-datetime-edit-meridiem-field {
		padding-block: 0;
	}
	:-moz-ui-invalid {
		box-shadow: none;
	}
	button,
	input:where([type='button'], [type='reset'], [type='submit']),
	::file-selector-button {
		appearance: button;
	}
	::-webkit-inner-spin-button,
	::-webkit-outer-spin-button {
		height: auto;
	}
	[hidden]:where(:not([hidden='until-found'])) {
		display: none !important;
	}
}
@layer utilities {
	.container {
		width: 100%;
		@media (width >= 40rem) {
			max-width: 40rem;
		}
		@media (width >= 48rem) {
			max-width: 48rem;
		}
		@media (width >= 64rem) {
			max-width: 64rem;
		}
		@media (width >= 80rem) {
			max-width: 80rem;
		}
		@media (width >= 96rem) {
			max-width: 96rem;
		}
	}
	.mx-auto {
		margin-inline: auto;
	}
	.mt-3 {
		margin-top: calc(var(--spacing) * 3);
	}
	.mb-5 {
		margin-bottom: calc(var(--spacing) * 5);
	}
	.mb-6 {
		margin-bottom: calc(var(--spacing) * 6);
	}
	.flex {
		display: flex;
	}
	.inline {
		display: inline;
	}
	.table {
		display: table;
	}
	.w-32 {
		width: calc(var(--spacing) * 32);
	}
	.max-w-full {
		max-width: 100%;
	}
	.max-w-sm {
		max-width: var(--container-sm);
	}
	.border-collapse {
		border-collapse: collapse;
	}
	.transform {
		transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
			var(--tw-skew-x) var(--tw-skew-y);
	}
	.resize {
		resize: both;
	}
	.flex-col {
		flex-direction: column;
	}
	.items-center {
		align-items: center;
	}
	.justify-center {
		justify-content: center;
	}
	.space-y-1 {
		:where(& > :not(:last-child)) {
			--tw-space-y-reverse: 0;
			margin-block-start: calc(
				calc(var(--spacing) * 1) * var(--tw-space-y-reverse)
			);
			margin-block-end: calc(
				calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse))
			);
		}
	}
	.space-y-8 {
		:where(& > :not(:last-child)) {
			--tw-space-y-reverse: 0;
			margin-block-start: calc(
				calc(var(--spacing) * 8) * var(--tw-space-y-reverse)
			);
			margin-block-end: calc(
				calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse))
			);
		}
	}
	.space-x-3 {
		:where(& > :not(:last-child)) {
			--tw-space-x-reverse: 0;
			margin-inline-start: calc(
				calc(var(--spacing) * 3) * var(--tw-space-x-reverse)
			);
			margin-inline-end: calc(
				calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse))
			);
		}
	}
	.rounded-3xl {
		border-radius: var(--radius-3xl);
	}
	.border {
		border-style: var(--tw-border-style);
		border-width: 1px;
	}
	.bg-brand {
		background-color: var(--color-brand);
	}
	.p-2 {
		padding: calc(var(--spacing) * 2);
	}
	.p-3 {
		padding: calc(var(--spacing) * 3);
	}
	.py-8 {
		padding-block: calc(var(--spacing) * 8);
	}
	.text-center {
		text-align: center;
	}
	.text-lg {
		font-size: var(--text-lg);
		line-height: var(--tw-leading, var(--text-lg--line-height));
	}
	.text-sm {
		font-size: var(--text-sm);
		line-height: var(--tw-leading, var(--text-sm--line-height));
	}
	.font-bold {
		--tw-font-weight: var(--font-weight-bold);
		font-weight: var(--font-weight-bold);
	}
	.tracking-tighter {
		--tw-tracking: var(--tracking-tighter);
		letter-spacing: var(--tracking-tighter);
	}
	.text-brand {
		color: var(--color-brand);
	}
	.text-white {
		color: var(--color-white);
	}
	.underline {
		text-decoration-line: underline;
	}
	.outline {
		outline-style: var(--tw-outline-style);
		outline-width: 1px;
	}
}
#main {
	margin-inline: auto;
	max-width: var(--container-sm);
	border-radius: var(--radius-3xl);
	background-color: var(--color-secondary-1);
	padding: calc(var(--spacing) * 6);
	text-align: center;
	--tw-shadow:
		0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)),
		0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
	box-shadow:
		var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
		var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.links {
	display: flex;
	flex-direction: column;
	:where(& > :not(:last-child)) {
		--tw-space-y-reverse: 0;
		margin-block-start: calc(
			calc(var(--spacing) * 3) * var(--tw-space-y-reverse)
		);
		margin-block-end: calc(
			calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse))
		);
	}
	padding: calc(var(--spacing) * 3);
	--tw-font-weight: var(--font-weight-bold);
	font-weight: var(--font-weight-bold);
	color: var(--color-brand);
	& > * {
		border-radius: var(--radius-3xl);
	}
	& > * {
		background-color: var(--color-secondary-2);
	}
	& > * {
		padding: calc(var(--spacing) * 2);
	}
}
button.disabled {
	color: var(--color-gray-300);
}
img {
	margin-inline: auto;
}
@property --tw-rotate-x {
	syntax: '*';
	inherits: false;
	initial-value: rotateX(0);
}
@property --tw-rotate-y {
	syntax: '*';
	inherits: false;
	initial-value: rotateY(0);
}
@property --tw-rotate-z {
	syntax: '*';
	inherits: false;
	initial-value: rotateZ(0);
}
@property --tw-skew-x {
	syntax: '*';
	inherits: false;
	initial-value: skewX(0);
}
@property --tw-skew-y {
	syntax: '*';
	inherits: false;
	initial-value: skewY(0);
}
@property --tw-space-y-reverse {
	syntax: '*';
	inherits: false;
	initial-value: 0;
}
@property --tw-space-x-reverse {
	syntax: '*';
	inherits: false;
	initial-value: 0;
}
@property --tw-border-style {
	syntax: '*';
	inherits: false;
	initial-value: solid;
}
@property --tw-font-weight {
	syntax: '*';
	inherits: false;
}
@property --tw-tracking {
	syntax: '*';
	inherits: false;
}
@property --tw-outline-style {
	syntax: '*';
	inherits: false;
	initial-value: solid;
}
@property --tw-shadow {
	syntax: '*';
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
	syntax: '*';
	inherits: false;
}
@property --tw-inset-shadow {
	syntax: '*';
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
	syntax: '*';
	inherits: false;
}
@property --tw-ring-color {
	syntax: '*';
	inherits: false;
}
@property --tw-ring-shadow {
	syntax: '*';
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
	syntax: '*';
	inherits: false;
}
@property --tw-inset-ring-shadow {
	syntax: '*';
	inherits: false;
	initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
	syntax: '*';
	inherits: false;
}
@property --tw-ring-offset-width {
	syntax: '<length>';
	inherits: false;
	initial-value: 0px;
}
@property --tw-ring-offset-color {
	syntax: '*';
	inherits: false;
	initial-value: #fff;
}
@property --tw-ring-offset-shadow {
	syntax: '*';
	inherits: false;
	initial-value: 0 0 #0000;
}
